window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"backend": {"fullname": "backend", "modulename": "backend", "kind": "module", "doc": "<p></p>\n"}, "backend.auth": {"fullname": "backend.auth", "modulename": "backend.auth", "kind": "module", "doc": "<p></p>\n"}, "backend.auth.SECRET_KEY": {"fullname": "backend.auth.SECRET_KEY", "modulename": "backend.auth", "qualname": "SECRET_KEY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;8cc25c5f7b2f7b8ad178d3a2ef5c3f01359adcf6e7d264b7c3e4f846c41e9f70&#x27;"}, "backend.auth.ALGORITHM": {"fullname": "backend.auth.ALGORITHM", "modulename": "backend.auth", "qualname": "ALGORITHM", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;HS256&#x27;"}, "backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES": {"fullname": "backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES", "modulename": "backend.auth", "qualname": "ACCESS_TOKEN_EXPIRE_MINUTES", "kind": "variable", "doc": "<p></p>\n", "default_value": "60"}, "backend.auth.create_access_token": {"fullname": "backend.auth.create_access_token", "modulename": "backend.auth", "qualname": "create_access_token", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">expires_delta</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">seconds</span><span class=\"o\">=</span><span class=\"mi\">3600</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.auth.verify_token": {"fullname": "backend.auth.verify_token", "modulename": "backend.auth", "qualname": "verify_token", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.main": {"fullname": "backend.main", "modulename": "backend.main", "kind": "module", "doc": "<p></p>\n"}, "backend.main.app": {"fullname": "backend.main.app", "modulename": "backend.main", "qualname": "app", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;fastapi.applications.FastAPI object&gt;"}, "backend.main.get_db": {"fullname": "backend.main.get_db", "modulename": "backend.main", "qualname": "get_db", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.main.health_check": {"fullname": "backend.main.health_check", "modulename": "backend.main", "qualname": "health_check", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.main.signup": {"fullname": "backend.main.signup", "modulename": "backend.main", "qualname": "signup", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">UserCreate</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.main.login": {"fullname": "backend.main.login", "modulename": "backend.main", "qualname": "login", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">LoginRequest</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.main.protected_route": {"fullname": "backend.main.protected_route", "modulename": "backend.main", "qualname": "protected_route", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">user_email</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">verify_token</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.models": {"fullname": "backend.models", "modulename": "backend.models", "kind": "module", "doc": "<p></p>\n"}, "backend.models.Base": {"fullname": "backend.models.Base", "modulename": "backend.models", "qualname": "Base", "kind": "class", "doc": "<p>The base class of the class hierarchy.</p>\n\n<p>When called, it accepts no arguments and returns a new featureless\ninstance that has no instance attributes and cannot be given any.</p>\n", "bases": "sqlalchemy.orm.decl_api._DynamicAttributesType, sqlalchemy.inspection.Inspectable[sqlalchemy.orm.mapper.Mapper[typing.Any]]"}, "backend.models.Base.__init__": {"fullname": "backend.models.Base.__init__", "modulename": "backend.models", "qualname": "Base.__init__", "kind": "function", "doc": "<p>A simple constructor that allows initialization from kwargs.</p>\n\n<p>Sets attributes on the constructed instance using the names and\nvalues in <code>kwargs</code>.</p>\n\n<p>Only keys that are present as\nattributes of the instance's class are allowed. These could be,\nfor example, any mapped columns or relationships.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "backend.models.Base.registry": {"fullname": "backend.models.Base.registry", "modulename": "backend.models", "qualname": "Base.registry", "kind": "variable", "doc": "<p></p>\n", "annotation": ": sqlalchemy.orm.decl_api.registry", "default_value": "&lt;sqlalchemy.orm.decl_api.registry object&gt;"}, "backend.models.Base.metadata": {"fullname": "backend.models.Base.metadata", "modulename": "backend.models", "qualname": "Base.metadata", "kind": "variable", "doc": "<p></p>\n", "annotation": ": sqlalchemy.sql.schema.MetaData", "default_value": "MetaData()"}, "backend.models.User": {"fullname": "backend.models.User", "modulename": "backend.models", "qualname": "User", "kind": "class", "doc": "<p>The base class of the class hierarchy.</p>\n\n<p>When called, it accepts no arguments and returns a new featureless\ninstance that has no instance attributes and cannot be given any.</p>\n", "bases": "sqlalchemy.orm.decl_api._DynamicAttributesType, sqlalchemy.inspection.Inspectable[sqlalchemy.orm.mapper.Mapper[typing.Any]]"}, "backend.models.User.__init__": {"fullname": "backend.models.User.__init__", "modulename": "backend.models", "qualname": "User.__init__", "kind": "function", "doc": "<p>A simple constructor that allows initialization from kwargs.</p>\n\n<p>Sets attributes on the constructed instance using the names and\nvalues in <code>kwargs</code>.</p>\n\n<p>Only keys that are present as\nattributes of the instance's class are allowed. These could be,\nfor example, any mapped columns or relationships.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "backend.models.User.id": {"fullname": "backend.models.User.id", "modulename": "backend.models", "qualname": "User.id", "kind": "variable", "doc": "<p></p>\n"}, "backend.models.User.username": {"fullname": "backend.models.User.username", "modulename": "backend.models", "qualname": "User.username", "kind": "variable", "doc": "<p></p>\n"}, "backend.models.User.hashed_password": {"fullname": "backend.models.User.hashed_password", "modulename": "backend.models", "qualname": "User.hashed_password", "kind": "variable", "doc": "<p></p>\n"}, "backend.models.DATABASE_URL": {"fullname": "backend.models.DATABASE_URL", "modulename": "backend.models", "qualname": "DATABASE_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;sqlite:///./test.db&#x27;"}, "backend.models.engine": {"fullname": "backend.models.engine", "modulename": "backend.models", "qualname": "engine", "kind": "variable", "doc": "<p></p>\n", "default_value": "Engine(sqlite:///./test.db)"}, "backend.models.SessionLocal": {"fullname": "backend.models.SessionLocal", "modulename": "backend.models", "qualname": "SessionLocal", "kind": "variable", "doc": "<p></p>\n", "default_value": "sessionmaker(class_=&#x27;Session&#x27;, autocommit=False, bind=Engine(sqlite:///./test.db), autoflush=False, expire_on_commit=True)"}, "backend.populate_db_with_fake_entries": {"fullname": "backend.populate_db_with_fake_entries", "modulename": "backend.populate_db_with_fake_entries", "kind": "module", "doc": "<p></p>\n"}, "backend.populate_db_with_fake_entries.fake": {"fullname": "backend.populate_db_with_fake_entries.fake", "modulename": "backend.populate_db_with_fake_entries", "qualname": "fake", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;faker.proxy.Faker object&gt;"}, "backend.populate_db_with_fake_entries.session": {"fullname": "backend.populate_db_with_fake_entries.session", "modulename": "backend.populate_db_with_fake_entries", "qualname": "session", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;sqlalchemy.orm.session.Session object&gt;"}, "backend.populate_db_with_fake_entries.create_fake_groups": {"fullname": "backend.populate_db_with_fake_entries.create_fake_groups", "modulename": "backend.populate_db_with_fake_entries", "qualname": "create_fake_groups", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">5</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.populate_db_with_fake_entries.create_fake_users": {"fullname": "backend.populate_db_with_fake_entries.create_fake_users", "modulename": "backend.populate_db_with_fake_entries", "qualname": "create_fake_users", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.populate_db_with_fake_entries.create_fake_journals": {"fullname": "backend.populate_db_with_fake_entries.create_fake_journals", "modulename": "backend.populate_db_with_fake_entries", "qualname": "create_fake_journals", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">20</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.populate_db_with_fake_entries.create_fake_codes": {"fullname": "backend.populate_db_with_fake_entries.create_fake_codes", "modulename": "backend.populate_db_with_fake_entries", "qualname": "create_fake_codes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">50</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.populate_db_with_fake_entries.create_fake_entries": {"fullname": "backend.populate_db_with_fake_entries.create_fake_entries", "modulename": "backend.populate_db_with_fake_entries", "qualname": "create_fake_entries", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">50</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.populate_db_with_fake_entries.populate_database": {"fullname": "backend.populate_db_with_fake_entries.populate_database", "modulename": "backend.populate_db_with_fake_entries", "qualname": "populate_database", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers": {"fullname": "backend.routers", "modulename": "backend.routers", "kind": "module", "doc": "<p></p>\n"}, "backend.routers.ai_prof": {"fullname": "backend.routers.ai_prof", "modulename": "backend.routers.ai_prof", "kind": "module", "doc": "<p></p>\n"}, "backend.routers.ai_prof.BASEDIR": {"fullname": "backend.routers.ai_prof.BASEDIR", "modulename": "backend.routers.ai_prof", "qualname": "BASEDIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/home/runner/work/cse210-fa24-group06/cse210-fa24-group06/package/backend/routers&#x27;"}, "backend.routers.ai_prof.model": {"fullname": "backend.routers.ai_prof.model", "modulename": "backend.routers.ai_prof", "qualname": "model", "kind": "variable", "doc": "<p></p>\n", "default_value": "genai.GenerativeModel(\n    model_name=&#x27;models/gemini-1.5-flash&#x27;,\n    generation_config={},\n    safety_settings={},\n    tools=None,\n    system_instruction=None,\n    cached_content=None\n)"}, "backend.routers.ai_prof.router": {"fullname": "backend.routers.ai_prof.router", "modulename": "backend.routers.ai_prof", "qualname": "router", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;fastapi.routing.APIRouter object&gt;"}, "backend.routers.ai_prof.client": {"fullname": "backend.routers.ai_prof.client", "modulename": "backend.routers.ai_prof", "qualname": "client", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;qdrant_client.qdrant_client.QdrantClient object&gt;"}, "backend.routers.ai_prof.collection_name": {"fullname": "backend.routers.ai_prof.collection_name", "modulename": "backend.routers.ai_prof", "qualname": "collection_name", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;lectures210&#x27;"}, "backend.routers.ai_prof.search_lectures": {"fullname": "backend.routers.ai_prof.search_lectures", "modulename": "backend.routers.ai_prof", "qualname": "search_lectures", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">top_k</span><span class=\"o\">=</span><span class=\"mi\">5</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "backend.routers.ai_prof.get_embeddings": {"fullname": "backend.routers.ai_prof.get_embeddings", "modulename": "backend.routers.ai_prof", "qualname": "get_embeddings", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">texts</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "backend.routers.ai_prof.gemini": {"fullname": "backend.routers.ai_prof.gemini", "modulename": "backend.routers.ai_prof", "qualname": "gemini", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">prompt</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.ai_prof.get_prof_response": {"fullname": "backend.routers.ai_prof.get_prof_response", "modulename": "backend.routers.ai_prof", "qualname": "get_prof_response", "kind": "function", "doc": "<p>Get message back from AI Prof Powell</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">user_message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "backend.routers.create_apis": {"fullname": "backend.routers.create_apis", "modulename": "backend.routers.create_apis", "kind": "module", "doc": "<p></p>\n"}, "backend.routers.create_apis.router": {"fullname": "backend.routers.create_apis.router", "modulename": "backend.routers.create_apis", "qualname": "router", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;fastapi.routing.APIRouter object&gt;"}, "backend.routers.create_apis.get_db": {"fullname": "backend.routers.create_apis.get_db", "modulename": "backend.routers.create_apis", "qualname": "get_db", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.create_apis.create_journal": {"fullname": "backend.routers.create_apis.create_journal", "modulename": "backend.routers.create_apis", "qualname": "create_journal", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_title</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.create_apis.create_group": {"fullname": "backend.routers.create_apis.create_group", "modulename": "backend.routers.create_apis", "qualname": "create_group", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">group_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">group_desc</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.create_apis.create_codes": {"fullname": "backend.routers.create_apis.create_codes", "modulename": "backend.routers.create_apis", "qualname": "create_codes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">code_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">language</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.create_apis.create_code": {"fullname": "backend.routers.create_apis.create_code", "modulename": "backend.routers.create_apis", "qualname": "create_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">code_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.create_apis.create_entry": {"fullname": "backend.routers.create_apis.create_entry", "modulename": "backend.routers.create_apis", "qualname": "create_entry", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">entry_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.create_apis.create_tag": {"fullname": "backend.routers.create_apis.create_tag", "modulename": "backend.routers.create_apis", "qualname": "create_tag", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tag_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.delete_apis": {"fullname": "backend.routers.delete_apis", "modulename": "backend.routers.delete_apis", "kind": "module", "doc": "<p></p>\n"}, "backend.routers.delete_apis.router": {"fullname": "backend.routers.delete_apis.router", "modulename": "backend.routers.delete_apis", "qualname": "router", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;fastapi.routing.APIRouter object&gt;"}, "backend.routers.delete_apis.get_db": {"fullname": "backend.routers.delete_apis.get_db", "modulename": "backend.routers.delete_apis", "qualname": "get_db", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.delete_apis.delete_user": {"fullname": "backend.routers.delete_apis.delete_user", "modulename": "backend.routers.delete_apis", "qualname": "delete_user", "kind": "function", "doc": "<p>Deletes a user from the database.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.delete_apis.delete_from_group": {"fullname": "backend.routers.delete_apis.delete_from_group", "modulename": "backend.routers.delete_apis", "qualname": "delete_from_group", "kind": "function", "doc": "<p>Removes a journal from a group and updates the updated_at field.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.delete_apis.delete_codes": {"fullname": "backend.routers.delete_apis.delete_codes", "modulename": "backend.routers.delete_apis", "qualname": "delete_codes", "kind": "function", "doc": "<p>Deletes code from a journal and shifts subsequent code snippets to left.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">page_num</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.delete_apis.delete_entry": {"fullname": "backend.routers.delete_apis.delete_entry", "modulename": "backend.routers.delete_apis", "qualname": "delete_entry", "kind": "function", "doc": "<p>Deletes an entry from a journal and shifts subsequent entries left.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">page_num</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.delete_apis.delete_journal": {"fullname": "backend.routers.delete_apis.delete_journal", "modulename": "backend.routers.delete_apis", "qualname": "delete_journal", "kind": "function", "doc": "<p>Deletes a journal and all its entries.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.delete_apis.delete_group": {"fullname": "backend.routers.delete_apis.delete_group", "modulename": "backend.routers.delete_apis", "qualname": "delete_group", "kind": "function", "doc": "<p>Deletes a group without deleting the journals inside it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">group_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.delete_apis.delete_tag": {"fullname": "backend.routers.delete_apis.delete_tag", "modulename": "backend.routers.delete_apis", "qualname": "delete_tag", "kind": "function", "doc": "<p>Deletes a tag and removes it from all journals.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tag_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.example": {"fullname": "backend.routers.example", "modulename": "backend.routers.example", "kind": "module", "doc": "<p></p>\n"}, "backend.routers.example.router": {"fullname": "backend.routers.example.router", "modulename": "backend.routers.example", "qualname": "router", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;fastapi.routing.APIRouter object&gt;"}, "backend.routers.example.read_item": {"fullname": "backend.routers.example.read_item", "modulename": "backend.routers.example", "qualname": "read_item", "kind": "function", "doc": "<p>Retrieve an item by its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">item_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">q</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.get_user": {"fullname": "backend.routers.get_user", "modulename": "backend.routers.get_user", "kind": "module", "doc": "<p></p>\n"}, "backend.routers.get_user.router": {"fullname": "backend.routers.get_user.router", "modulename": "backend.routers.get_user", "qualname": "router", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;fastapi.routing.APIRouter object&gt;"}, "backend.routers.get_user.get_db": {"fullname": "backend.routers.get_user.get_db", "modulename": "backend.routers.get_user", "qualname": "get_db", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.get_user.get_user_details": {"fullname": "backend.routers.get_user.get_user_details", "modulename": "backend.routers.get_user", "qualname": "get_user_details", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.get_user.get_user_journals": {"fullname": "backend.routers.get_user.get_user_journals", "modulename": "backend.routers.get_user", "qualname": "get_user_journals", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.get_user.get_journal_codes": {"fullname": "backend.routers.get_user.get_journal_codes", "modulename": "backend.routers.get_user", "qualname": "get_journal_codes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.get_user.get_journal_entries": {"fullname": "backend.routers.get_user.get_journal_entries", "modulename": "backend.routers.get_user", "qualname": "get_journal_entries", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.rag_search": {"fullname": "backend.routers.rag_search", "modulename": "backend.routers.rag_search", "kind": "module", "doc": "<p></p>\n"}, "backend.routers.rag_search.router": {"fullname": "backend.routers.rag_search.router", "modulename": "backend.routers.rag_search", "qualname": "router", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;fastapi.routing.APIRouter object&gt;"}, "backend.routers.rag_search.embedding_model": {"fullname": "backend.routers.rag_search.embedding_model", "modulename": "backend.routers.rag_search", "qualname": "embedding_model", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, "backend.routers.rag_search.faiss_index": {"fullname": "backend.routers.rag_search.faiss_index", "modulename": "backend.routers.rag_search", "qualname": "faiss_index", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;faiss.swigfaiss_avx2.IndexFlatL2; proxy of &lt;Swig Object of type &#x27;faiss::IndexFlatL2 *&#x27;&gt; &gt;"}, "backend.routers.rag_search.entry_metadata": {"fullname": "backend.routers.rag_search.entry_metadata", "modulename": "backend.routers.rag_search", "qualname": "entry_metadata", "kind": "variable", "doc": "<p></p>\n", "default_value": "[]"}, "backend.routers.rag_search.MODEL_PATH": {"fullname": "backend.routers.rag_search.MODEL_PATH", "modulename": "backend.routers.rag_search", "qualname": "MODEL_PATH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;sentence-transformers/all-MiniLM-L6-v2&#x27;"}, "backend.routers.rag_search.check_model_downloaded": {"fullname": "backend.routers.rag_search.check_model_downloaded", "modulename": "backend.routers.rag_search", "qualname": "check_model_downloaded", "kind": "function", "doc": "<p>Check if the SentenceTransformer model has been downloaded.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.rag_search.get_db": {"fullname": "backend.routers.rag_search.get_db", "modulename": "backend.routers.rag_search", "qualname": "get_db", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.rag_search.embed_and_index": {"fullname": "backend.routers.rag_search.embed_and_index", "modulename": "backend.routers.rag_search", "qualname": "embed_and_index", "kind": "function", "doc": "<p>Embed all user's entries and index them for vector search.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.rag_search.vector_search": {"fullname": "backend.routers.rag_search.vector_search", "modulename": "backend.routers.rag_search", "qualname": "vector_search", "kind": "function", "doc": "<p>Perform a vector search for the query text across all user's entries.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.read": {"fullname": "backend.routers.read", "modulename": "backend.routers.read", "kind": "module", "doc": "<p></p>\n"}, "backend.routers.read.router": {"fullname": "backend.routers.read.router", "modulename": "backend.routers.read", "qualname": "router", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;fastapi.routing.APIRouter object&gt;"}, "backend.routers.read.get_db": {"fullname": "backend.routers.read.get_db", "modulename": "backend.routers.read", "qualname": "get_db", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.read.read_entries": {"fullname": "backend.routers.read.read_entries", "modulename": "backend.routers.read", "qualname": "read_entries", "kind": "function", "doc": "<p>Retrieve the text of a specific journal entry by entry_id.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">page_number</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.read.read_codes": {"fullname": "backend.routers.read.read_codes", "modulename": "backend.routers.read", "qualname": "read_codes", "kind": "function", "doc": "<p>Retrieve the text of a specific journal code by code_id.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">page_number</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.read.read_journal": {"fullname": "backend.routers.read.read_journal", "modulename": "backend.routers.read", "qualname": "read_journal", "kind": "function", "doc": "<p>Retrieve all entries for a specific journal by journal_id.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.read_apis": {"fullname": "backend.routers.read_apis", "modulename": "backend.routers.read_apis", "kind": "module", "doc": "<p></p>\n"}, "backend.routers.read_apis.router": {"fullname": "backend.routers.read_apis.router", "modulename": "backend.routers.read_apis", "qualname": "router", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;fastapi.routing.APIRouter object&gt;"}, "backend.routers.read_apis.get_db": {"fullname": "backend.routers.read_apis.get_db", "modulename": "backend.routers.read_apis", "qualname": "get_db", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.read_apis.read_entries": {"fullname": "backend.routers.read_apis.read_entries", "modulename": "backend.routers.read_apis", "qualname": "read_entries", "kind": "function", "doc": "<p>Retrieve the text of a specific journal entry by entry_id.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">entry_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.read_apis.read_codes": {"fullname": "backend.routers.read_apis.read_codes", "modulename": "backend.routers.read_apis", "qualname": "read_codes", "kind": "function", "doc": "<p>Retrieve the text of a specific journal code by code_id.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">code_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.read_apis.read_journal": {"fullname": "backend.routers.read_apis.read_journal", "modulename": "backend.routers.read_apis", "qualname": "read_journal", "kind": "function", "doc": "<p>Retrieve all entries for a specific journal by journal_id.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.read_apis.read_journal_by_tags": {"fullname": "backend.routers.read_apis.read_journal_by_tags", "modulename": "backend.routers.read_apis", "qualname": "read_journal_by_tags", "kind": "function", "doc": "<p>Retrieve all entries for a specific journal by tag_id.\nNOTE: This method retrieves just the journal ids; to retrieve the\nentries, use the /read_journal endpoint for each journal_id.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tag_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.read_apis.get_tags_by_journal": {"fullname": "backend.routers.read_apis.get_tags_by_journal", "modulename": "backend.routers.read_apis", "qualname": "get_tags_by_journal", "kind": "function", "doc": "<p>Retrieves all tags for a specific journal by journal_id</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.read_apis.get_tag_name": {"fullname": "backend.routers.read_apis.get_tag_name", "modulename": "backend.routers.read_apis", "qualname": "get_tag_name", "kind": "function", "doc": "<p>Retrieves the name of a tag by tag_id</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tag_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.read_apis.get_all_tags": {"fullname": "backend.routers.read_apis.get_all_tags", "modulename": "backend.routers.read_apis", "qualname": "get_all_tags", "kind": "function", "doc": "<p>Retrieves all tags in the database (no duplicates)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.read_apis.read_group": {"fullname": "backend.routers.read_apis.read_group", "modulename": "backend.routers.read_apis", "qualname": "read_group", "kind": "function", "doc": "<p>Retrieve all journals associated with a group via group_id.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">group_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.search": {"fullname": "backend.routers.search", "modulename": "backend.routers.search", "kind": "module", "doc": "<p></p>\n"}, "backend.routers.search.router": {"fullname": "backend.routers.search.router", "modulename": "backend.routers.search", "qualname": "router", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;fastapi.routing.APIRouter object&gt;"}, "backend.routers.search.get_db": {"fullname": "backend.routers.search.get_db", "modulename": "backend.routers.search", "qualname": "get_db", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.search.search_entry": {"fullname": "backend.routers.search.search_entry", "modulename": "backend.routers.search", "qualname": "search_entry", "kind": "function", "doc": "<p>Search for a text in all entries of all journals owned by the user.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">search_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.search.search_entry_in_journal": {"fullname": "backend.routers.search.search_entry_in_journal", "modulename": "backend.routers.search", "qualname": "search_entry_in_journal", "kind": "function", "doc": "<p>Search for a text in entries of a specific journal owned by the user.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">search_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.search.search_code": {"fullname": "backend.routers.search.search_code", "modulename": "backend.routers.search", "qualname": "search_code", "kind": "function", "doc": "<p>Search for a text in all codes of all journals owned by the user.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">search_code</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.search.search_code_in_journal": {"fullname": "backend.routers.search.search_code_in_journal", "modulename": "backend.routers.search", "qualname": "search_code_in_journal", "kind": "function", "doc": "<p>Search for a text in entries of a specific journal owned by the user.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">search_code</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.search.search_journal_by_date": {"fullname": "backend.routers.search.search_journal_by_date", "modulename": "backend.routers.search", "qualname": "search_journal_by_date", "kind": "function", "doc": "<p>Search for journals created on a specific date owned by the user.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">search_date</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.update_apis": {"fullname": "backend.routers.update_apis", "modulename": "backend.routers.update_apis", "kind": "module", "doc": "<p></p>\n"}, "backend.routers.update_apis.router": {"fullname": "backend.routers.update_apis.router", "modulename": "backend.routers.update_apis", "qualname": "router", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;fastapi.routing.APIRouter object&gt;"}, "backend.routers.update_apis.get_db": {"fullname": "backend.routers.update_apis.get_db", "modulename": "backend.routers.update_apis", "qualname": "get_db", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.update_apis.update_user_first_name": {"fullname": "backend.routers.update_apis.update_user_first_name", "modulename": "backend.routers.update_apis", "qualname": "update_user_first_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">first_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.update_apis.update_user_last_name": {"fullname": "backend.routers.update_apis.update_user_last_name", "modulename": "backend.routers.update_apis", "qualname": "update_user_last_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">last_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.update_apis.update_entry": {"fullname": "backend.routers.update_apis.update_entry", "modulename": "backend.routers.update_apis", "qualname": "update_entry", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">page_num</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">entry_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.update_apis.update_user_code": {"fullname": "backend.routers.update_apis.update_user_code", "modulename": "backend.routers.update_apis", "qualname": "update_user_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">page_num</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">code_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">language</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.update_apis.update_journal": {"fullname": "backend.routers.update_apis.update_journal", "modulename": "backend.routers.update_apis", "qualname": "update_journal", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">journal_title</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.update_apis.update_tag_name": {"fullname": "backend.routers.update_apis.update_tag_name", "modulename": "backend.routers.update_apis", "qualname": "update_tag_name", "kind": "function", "doc": "<p>Updates the name of a tag with the given tag_id.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tag_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">new_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.update_apis.add_tag_to_journal": {"fullname": "backend.routers.update_apis.add_tag_to_journal", "modulename": "backend.routers.update_apis", "qualname": "add_tag_to_journal", "kind": "function", "doc": "<p>Adds a tag to a journal by creating a new entry in the journals_and_tags table.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">tag_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.routers.update_apis.delete_tag_from_journal": {"fullname": "backend.routers.update_apis.delete_tag_from_journal", "modulename": "backend.routers.update_apis", "qualname": "delete_tag_from_journal", "kind": "function", "doc": "<p>Deletes a tag from a journal by deleting the entry in the journals_and_tags table.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">auth_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">journal_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">tag_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">Session</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">get_db</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_create_api": {"fullname": "backend.test_create_api", "modulename": "backend.test_create_api", "kind": "module", "doc": "<p></p>\n"}, "backend.test_create_api.client": {"fullname": "backend.test_create_api.client", "modulename": "backend.test_create_api", "qualname": "client", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;starlette.testclient.TestClient object&gt;"}, "backend.test_create_api.login_user": {"fullname": "backend.test_create_api.login_user", "modulename": "backend.test_create_api", "qualname": "login_user", "kind": "function", "doc": "<p>Fixture to login and fetch the auth token.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_create_api.mock_db_session": {"fullname": "backend.test_create_api.mock_db_session", "modulename": "backend.test_create_api", "qualname": "mock_db_session", "kind": "function", "doc": "<p>Fixture to mock the database session.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_create_api.mock_user": {"fullname": "backend.test_create_api.mock_user", "modulename": "backend.test_create_api", "qualname": "mock_user", "kind": "function", "doc": "<p>Fixture to mock a user in the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mock_db_session</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_create_api.mock_create_journal": {"fullname": "backend.test_create_api.mock_create_journal", "modulename": "backend.test_create_api", "qualname": "mock_create_journal", "kind": "function", "doc": "<p>Fixture to mock the create_journal function.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_create_api.mock_create_group": {"fullname": "backend.test_create_api.mock_create_group", "modulename": "backend.test_create_api", "qualname": "mock_create_group", "kind": "function", "doc": "<p>Fixture to mock the create_group function.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_create_api.mock_create_entry": {"fullname": "backend.test_create_api.mock_create_entry", "modulename": "backend.test_create_api", "qualname": "mock_create_entry", "kind": "function", "doc": "<p>Fixture to mock the create_entry function.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_create_api.mock_create_code": {"fullname": "backend.test_create_api.mock_create_code", "modulename": "backend.test_create_api", "qualname": "mock_create_code", "kind": "function", "doc": "<p>Fixture to mock the create_code function.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_create_api.test_create_journal": {"fullname": "backend.test_create_api.test_create_journal", "modulename": "backend.test_create_api", "qualname": "test_create_journal", "kind": "function", "doc": "<p>Test creating a journal.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_create_journal</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_create_api.test_create_group": {"fullname": "backend.test_create_api.test_create_group", "modulename": "backend.test_create_api", "qualname": "test_create_group", "kind": "function", "doc": "<p>Test creating a group.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_create_group</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_create_api.test_create_entry": {"fullname": "backend.test_create_api.test_create_entry", "modulename": "backend.test_create_api", "qualname": "test_create_entry", "kind": "function", "doc": "<p>Test creating an entry.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_create_entry</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_create_api.test_create_code": {"fullname": "backend.test_create_api.test_create_code", "modulename": "backend.test_create_api", "qualname": "test_create_code", "kind": "function", "doc": "<p>Test creating an code.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_create_code</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_delete": {"fullname": "backend.test_delete", "modulename": "backend.test_delete", "kind": "module", "doc": "<p></p>\n"}, "backend.test_delete.client": {"fullname": "backend.test_delete.client", "modulename": "backend.test_delete", "qualname": "client", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;starlette.testclient.TestClient object&gt;"}, "backend.test_delete.TEST_DATA": {"fullname": "backend.test_delete.TEST_DATA", "modulename": "backend.test_delete", "qualname": "TEST_DATA", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;user&#x27;: {&#x27;email&#x27;: &#x27;user@example.com&#x27;, &#x27;password&#x27;: &#x27;string&#x27;}, &#x27;journal&#x27;: {&#x27;journal_id&#x27;: 23, &#x27;page_num&#x27;: 0}, &#x27;group&#x27;: {&#x27;group_id&#x27;: 6}}"}, "backend.test_delete.login_user": {"fullname": "backend.test_delete.login_user", "modulename": "backend.test_delete", "qualname": "login_user", "kind": "function", "doc": "<p>Fixture to login and fetch the auth token.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_delete.mock_db_session": {"fullname": "backend.test_delete.mock_db_session", "modulename": "backend.test_delete", "qualname": "mock_db_session", "kind": "function", "doc": "<p>Fixture to mock the database session.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_delete.test_delete_entry_success": {"fullname": "backend.test_delete.test_delete_entry_success", "modulename": "backend.test_delete", "qualname": "test_delete_entry_success", "kind": "function", "doc": "<p>Test the /delete_entry endpoint.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_delete.test_delete_journal_success": {"fullname": "backend.test_delete.test_delete_journal_success", "modulename": "backend.test_delete", "qualname": "test_delete_journal_success", "kind": "function", "doc": "<p>Test the /delete_journal endpoint.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_delete.test_delete_group_success": {"fullname": "backend.test_delete.test_delete_group_success", "modulename": "backend.test_delete", "qualname": "test_delete_group_success", "kind": "function", "doc": "<p>Test the /delete_group endpoint.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mock_db_session</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_delete.test_delete_user_success": {"fullname": "backend.test_delete.test_delete_user_success", "modulename": "backend.test_delete", "qualname": "test_delete_user_success", "kind": "function", "doc": "<p>Test the /delete_user endpoint.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_read": {"fullname": "backend.test_read", "modulename": "backend.test_read", "kind": "module", "doc": "<p></p>\n"}, "backend.test_read.client": {"fullname": "backend.test_read.client", "modulename": "backend.test_read", "qualname": "client", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;starlette.testclient.TestClient object&gt;"}, "backend.test_read.login_user": {"fullname": "backend.test_read.login_user", "modulename": "backend.test_read", "qualname": "login_user", "kind": "function", "doc": "<p>Fixture to login and fetch the auth token.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_read.mock_db_session": {"fullname": "backend.test_read.mock_db_session", "modulename": "backend.test_read", "qualname": "mock_db_session", "kind": "function", "doc": "<p>Fixture to mock the database session.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_read.mock_user": {"fullname": "backend.test_read.mock_user", "modulename": "backend.test_read", "qualname": "mock_user", "kind": "function", "doc": "<p>Fixture to mock a user in the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mock_db_session</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_read.test_read_entries_success": {"fullname": "backend.test_read.test_read_entries_success", "modulename": "backend.test_read", "qualname": "test_read_entries_success", "kind": "function", "doc": "<p>Test the /read_entries endpoint for success.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_read.test_read_journal_success": {"fullname": "backend.test_read.test_read_journal_success", "modulename": "backend.test_read", "qualname": "test_read_journal_success", "kind": "function", "doc": "<p>Test the /read_journal endpoint for success.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_read.test_read_journal_not_authorized": {"fullname": "backend.test_read.test_read_journal_not_authorized", "modulename": "backend.test_read", "qualname": "test_read_journal_not_authorized", "kind": "function", "doc": "<p>Test the /read_journal endpoint when the user is not authorized.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_read.test_read_journal_no_entries": {"fullname": "backend.test_read.test_read_journal_no_entries", "modulename": "backend.test_read", "qualname": "test_read_journal_no_entries", "kind": "function", "doc": "<p>Test the /read_journal endpoint when no entries are found.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_search": {"fullname": "backend.test_search", "modulename": "backend.test_search", "kind": "module", "doc": "<p></p>\n"}, "backend.test_search.client": {"fullname": "backend.test_search.client", "modulename": "backend.test_search", "qualname": "client", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;starlette.testclient.TestClient object&gt;"}, "backend.test_search.login_user": {"fullname": "backend.test_search.login_user", "modulename": "backend.test_search", "qualname": "login_user", "kind": "function", "doc": "<p>Fixture to login and fetch the auth token.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_search.mock_db_session": {"fullname": "backend.test_search.mock_db_session", "modulename": "backend.test_search", "qualname": "mock_db_session", "kind": "function", "doc": "<p>Fixture to mock the database session.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_search.mock_user_and_journals": {"fullname": "backend.test_search.mock_user_and_journals", "modulename": "backend.test_search", "qualname": "mock_user_and_journals", "kind": "function", "doc": "<p>Fixture to mock a user and their journals.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mock_db_session</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_search.test_search_entry": {"fullname": "backend.test_search.test_search_entry", "modulename": "backend.test_search", "qualname": "test_search_entry", "kind": "function", "doc": "<p>Test the search_entry endpoint.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span>, </span><span class=\"param\"><span class=\"n\">mock_user_and_journals</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_search.test_search_entry_in_journal": {"fullname": "backend.test_search.test_search_entry_in_journal", "modulename": "backend.test_search", "qualname": "test_search_entry_in_journal", "kind": "function", "doc": "<p>Test the search_entry_in_journal endpoint.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span>, </span><span class=\"param\"><span class=\"n\">mock_user_and_journals</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_search.test_search_journal_by_date": {"fullname": "backend.test_search.test_search_journal_by_date", "modulename": "backend.test_search", "qualname": "test_search_journal_by_date", "kind": "function", "doc": "<p>Test the search_journal_by_date endpoint.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span>, </span><span class=\"param\"><span class=\"n\">mock_user_and_journals</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_search.test_search_journal_by_date_invalid_format": {"fullname": "backend.test_search.test_search_journal_by_date_invalid_format", "modulename": "backend.test_search", "qualname": "test_search_journal_by_date_invalid_format", "kind": "function", "doc": "<p>Test invalid date format for the search_journal_by_date endpoint.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_update": {"fullname": "backend.test_update", "modulename": "backend.test_update", "kind": "module", "doc": "<p></p>\n"}, "backend.test_update.client": {"fullname": "backend.test_update.client", "modulename": "backend.test_update", "qualname": "client", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;starlette.testclient.TestClient object&gt;"}, "backend.test_update.login_user": {"fullname": "backend.test_update.login_user", "modulename": "backend.test_update", "qualname": "login_user", "kind": "function", "doc": "<p>Fixture to login and fetch the auth token.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_update.mock_db_session": {"fullname": "backend.test_update.mock_db_session", "modulename": "backend.test_update", "qualname": "mock_db_session", "kind": "function", "doc": "<p>Fixture to mock the database session.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_update.mock_user": {"fullname": "backend.test_update.mock_user", "modulename": "backend.test_update", "qualname": "mock_user", "kind": "function", "doc": "<p>Fixture to mock a user in the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mock_db_session</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_update.test_update_user_first_name": {"fullname": "backend.test_update.test_update_user_first_name", "modulename": "backend.test_update", "qualname": "test_update_user_first_name", "kind": "function", "doc": "<p>Test the update_user_first_name endpoint.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span>, </span><span class=\"param\"><span class=\"n\">mock_user</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_update.test_update_user_last_name": {"fullname": "backend.test_update.test_update_user_last_name", "modulename": "backend.test_update", "qualname": "test_update_user_last_name", "kind": "function", "doc": "<p>Test the update_user_last_name endpoint.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span>, </span><span class=\"param\"><span class=\"n\">mock_user</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_update.test_update_user_entry": {"fullname": "backend.test_update.test_update_user_entry", "modulename": "backend.test_update", "qualname": "test_update_user_entry", "kind": "function", "doc": "<p>Test the update_user_entry endpoint.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span>, </span><span class=\"param\"><span class=\"n\">mock_user</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_update.test_update_journal": {"fullname": "backend.test_update.test_update_journal", "modulename": "backend.test_update", "qualname": "test_update_journal", "kind": "function", "doc": "<p>Test the update_journal endpoint.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span>, </span><span class=\"param\"><span class=\"n\">mock_user</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_user_detail": {"fullname": "backend.test_user_detail", "modulename": "backend.test_user_detail", "kind": "module", "doc": "<p></p>\n"}, "backend.test_user_detail.client": {"fullname": "backend.test_user_detail.client", "modulename": "backend.test_user_detail", "qualname": "client", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;starlette.testclient.TestClient object&gt;"}, "backend.test_user_detail.user_id": {"fullname": "backend.test_user_detail.user_id", "modulename": "backend.test_user_detail", "qualname": "user_id", "kind": "variable", "doc": "<p></p>\n", "default_value": "13"}, "backend.test_user_detail.journal_id": {"fullname": "backend.test_user_detail.journal_id", "modulename": "backend.test_user_detail", "qualname": "journal_id", "kind": "variable", "doc": "<p></p>\n", "default_value": "23"}, "backend.test_user_detail.entry_id": {"fullname": "backend.test_user_detail.entry_id", "modulename": "backend.test_user_detail", "qualname": "entry_id", "kind": "variable", "doc": "<p></p>\n", "default_value": "53"}, "backend.test_user_detail.first_name": {"fullname": "backend.test_user_detail.first_name", "modulename": "backend.test_user_detail", "qualname": "first_name", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;bro&#x27;"}, "backend.test_user_detail.last_name": {"fullname": "backend.test_user_detail.last_name", "modulename": "backend.test_user_detail", "qualname": "last_name", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;no&#x27;"}, "backend.test_user_detail.journal_title": {"fullname": "backend.test_user_detail.journal_title", "modulename": "backend.test_user_detail", "qualname": "journal_title", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Test Journal&#x27;"}, "backend.test_user_detail.entry_text": {"fullname": "backend.test_user_detail.entry_text", "modulename": "backend.test_user_detail", "qualname": "entry_text", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;This is a test entry&#x27;"}, "backend.test_user_detail.TEST_USER": {"fullname": "backend.test_user_detail.TEST_USER", "modulename": "backend.test_user_detail", "qualname": "TEST_USER", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;user_id&#x27;: 13, &#x27;email&#x27;: &#x27;user@example.com&#x27;, &#x27;password&#x27;: &#x27;string&#x27;, &#x27;first_name&#x27;: &#x27;bro&#x27;, &#x27;last_name&#x27;: &#x27;no&#x27;}"}, "backend.test_user_detail.TEST_JOURNAL": {"fullname": "backend.test_user_detail.TEST_JOURNAL", "modulename": "backend.test_user_detail", "qualname": "TEST_JOURNAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;journal_id&#x27;: 23, &#x27;journal_title&#x27;: &#x27;Test Journal&#x27;, &#x27;created_at&#x27;: &#x27;2024-12-09 15:34:06&#x27;, &#x27;updated_at&#x27;: &#x27;2024-12-09 15:34:06&#x27;}"}, "backend.test_user_detail.TEST_ENTRY": {"fullname": "backend.test_user_detail.TEST_ENTRY", "modulename": "backend.test_user_detail", "qualname": "TEST_ENTRY", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;entry_id&#x27;: 53, &#x27;entry_text&#x27;: &#x27;This is a test entry&#x27;, &#x27;page_number&#x27;: 0, &#x27;journal_id&#x27;: 23}"}, "backend.test_user_detail.login_user": {"fullname": "backend.test_user_detail.login_user", "modulename": "backend.test_user_detail", "qualname": "login_user", "kind": "function", "doc": "<p>Fixture to login and fetch the auth token.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_user_detail.mock_db_session": {"fullname": "backend.test_user_detail.mock_db_session", "modulename": "backend.test_user_detail", "qualname": "mock_db_session", "kind": "function", "doc": "<p>Fixture to mock the database session.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_user_detail.mock_user": {"fullname": "backend.test_user_detail.mock_user", "modulename": "backend.test_user_detail", "qualname": "mock_user", "kind": "function", "doc": "<p>Fixture to mock a user in the database.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mock_db_session</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_user_detail.mock_create_journal": {"fullname": "backend.test_user_detail.mock_create_journal", "modulename": "backend.test_user_detail", "qualname": "mock_create_journal", "kind": "function", "doc": "<p>Fixture to mock the create_journal function.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_user_detail.mock_journals": {"fullname": "backend.test_user_detail.mock_journals", "modulename": "backend.test_user_detail", "qualname": "mock_journals", "kind": "function", "doc": "<p>Fixture to mock journals for a user.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mock_db_session</span>, </span><span class=\"param\"><span class=\"n\">mock_user</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_user_detail.mock_entries": {"fullname": "backend.test_user_detail.mock_entries", "modulename": "backend.test_user_detail", "qualname": "mock_entries", "kind": "function", "doc": "<p>Fixture to mock journal entries.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mock_db_session</span>, </span><span class=\"param\"><span class=\"n\">mock_user</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_user_detail.test_get_user_details_success": {"fullname": "backend.test_user_detail.test_get_user_details_success", "modulename": "backend.test_user_detail", "qualname": "test_get_user_details_success", "kind": "function", "doc": "<p>Test the get_user_details endpoint.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_user_detail.test_create_and_read_journal": {"fullname": "backend.test_user_detail.test_create_and_read_journal", "modulename": "backend.test_user_detail", "qualname": "test_create_and_read_journal", "kind": "function", "doc": "<p>Test creating a journal and then reading it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_create_journal</span>, </span><span class=\"param\"><span class=\"n\">mock_db_session</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.test_user_detail.test_create_and_read_entry": {"fullname": "backend.test_user_detail.test_create_and_read_entry", "modulename": "backend.test_user_detail", "qualname": "test_create_and_read_entry", "kind": "function", "doc": "<p>Test creating an entry and then reading it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">login_user</span>, </span><span class=\"param\"><span class=\"n\">mock_journals</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "backend.utils": {"fullname": "backend.utils", "modulename": "backend.utils", "kind": "module", "doc": "<p></p>\n"}, "backend.utils.pwd_context": {"fullname": "backend.utils.pwd_context", "modulename": "backend.utils", "qualname": "pwd_context", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CryptContext&gt;"}, "backend.utils.hash_password": {"fullname": "backend.utils.hash_password", "modulename": "backend.utils", "qualname": "hash_password", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">password</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "backend.utils.verify_password": {"fullname": "backend.utils.verify_password", "modulename": "backend.utils", "qualname": "verify_password", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">plain_password</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">hashed_password</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"backend": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.auth": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.auth.SECRET_KEY": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "backend.auth.ALGORITHM": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "backend.auth.create_access_token": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 3}, "backend.auth.verify_token": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "backend.main": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.main.app": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.main.get_db": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "backend.main.health_check": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "backend.main.signup": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "backend.main.login": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "backend.main.protected_route": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 3}, "backend.models": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.models.Base": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 12, "doc": 35}, "backend.models.Base.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 56}, "backend.models.Base.registry": {"qualname": 2, "fullname": 4, "annotation": 6, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "backend.models.Base.metadata": {"qualname": 2, "fullname": 4, "annotation": 5, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "backend.models.User": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 12, "doc": 35}, "backend.models.User.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 56}, "backend.models.User.id": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.models.User.username": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.models.User.hashed_password": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.models.DATABASE_URL": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "backend.models.engine": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "backend.models.SessionLocal": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "backend.populate_db_with_fake_entries": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.populate_db_with_fake_entries.fake": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.populate_db_with_fake_entries.session": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "backend.populate_db_with_fake_entries.create_fake_groups": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "backend.populate_db_with_fake_entries.create_fake_users": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "backend.populate_db_with_fake_entries.create_fake_journals": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "backend.populate_db_with_fake_entries.create_fake_codes": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "backend.populate_db_with_fake_entries.create_fake_entries": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "backend.populate_db_with_fake_entries.populate_database": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "backend.routers": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.ai_prof": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.ai_prof.BASEDIR": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.ai_prof.model": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 25, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.ai_prof.router": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.ai_prof.client": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.ai_prof.collection_name": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.ai_prof.search_lectures": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "backend.routers.ai_prof.get_embeddings": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "backend.routers.ai_prof.gemini": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "backend.routers.ai_prof.get_prof_response": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 9}, "backend.routers.create_apis": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.create_apis.router": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.create_apis.get_db": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "backend.routers.create_apis.create_journal": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 3}, "backend.routers.create_apis.create_group": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 91, "bases": 0, "doc": 3}, "backend.routers.create_apis.create_codes": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 95, "bases": 0, "doc": 3}, "backend.routers.create_apis.create_code": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 3}, "backend.routers.create_apis.create_entry": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 3}, "backend.routers.create_apis.create_tag": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 3}, "backend.routers.delete_apis": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.delete_apis.router": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.delete_apis.get_db": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "backend.routers.delete_apis.delete_user": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 9}, "backend.routers.delete_apis.delete_from_group": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 15}, "backend.routers.delete_apis.delete_codes": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 15}, "backend.routers.delete_apis.delete_entry": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 14}, "backend.routers.delete_apis.delete_journal": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 10}, "backend.routers.delete_apis.delete_group": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 12}, "backend.routers.delete_apis.delete_tag": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 12}, "backend.routers.example": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.example.router": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.example.read_item": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 9}, "backend.routers.get_user": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.get_user.router": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.get_user.get_db": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "backend.routers.get_user.get_user_details": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 3}, "backend.routers.get_user.get_user_journals": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 3}, "backend.routers.get_user.get_journal_codes": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 3}, "backend.routers.get_user.get_journal_entries": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 3}, "backend.routers.rag_search": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.rag_search.router": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.rag_search.embedding_model": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.rag_search.faiss_index": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 20, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.rag_search.entry_metadata": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.rag_search.MODEL_PATH": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.rag_search.check_model_downloaded": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 11}, "backend.routers.rag_search.get_db": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "backend.routers.rag_search.embed_and_index": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 14}, "backend.routers.rag_search.vector_search": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 16}, "backend.routers.read": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.read.router": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.read.get_db": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "backend.routers.read.read_entries": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 14}, "backend.routers.read.read_codes": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 14}, "backend.routers.read.read_journal": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 13}, "backend.routers.read_apis": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.read_apis.router": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.read_apis.get_db": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "backend.routers.read_apis.read_entries": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 14}, "backend.routers.read_apis.read_codes": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 14}, "backend.routers.read_apis.read_journal": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 13}, "backend.routers.read_apis.read_journal_by_tags": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 34}, "backend.routers.read_apis.get_tags_by_journal": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 12}, "backend.routers.read_apis.get_tag_name": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 11}, "backend.routers.read_apis.get_all_tags": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 11}, "backend.routers.read_apis.read_group": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 13}, "backend.routers.search": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.search.router": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.search.get_db": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "backend.routers.search.search_entry": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 17}, "backend.routers.search.search_entry_in_journal": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 17}, "backend.routers.search.search_code": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 17}, "backend.routers.search.search_code_in_journal": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 17}, "backend.routers.search.search_journal_by_date": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 15}, "backend.routers.update_apis": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.update_apis.router": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.routers.update_apis.get_db": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "backend.routers.update_apis.update_user_first_name": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 3}, "backend.routers.update_apis.update_user_last_name": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 3}, "backend.routers.update_apis.update_entry": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 3}, "backend.routers.update_apis.update_user_code": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 107, "bases": 0, "doc": 3}, "backend.routers.update_apis.update_journal": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 3}, "backend.routers.update_apis.update_tag_name": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 14}, "backend.routers.update_apis.add_tag_to_journal": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 20}, "backend.routers.update_apis.delete_tag_from_journal": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 19}, "backend.test_create_api": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.test_create_api.client": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.test_create_api.login_user": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 11}, "backend.test_create_api.mock_db_session": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "backend.test_create_api.mock_user": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 11}, "backend.test_create_api.mock_create_journal": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 10}, "backend.test_create_api.mock_create_group": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 10}, "backend.test_create_api.mock_create_entry": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 10}, "backend.test_create_api.mock_create_code": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 10}, "backend.test_create_api.test_create_journal": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 7}, "backend.test_create_api.test_create_group": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 7}, "backend.test_create_api.test_create_entry": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 7}, "backend.test_create_api.test_create_code": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 7}, "backend.test_delete": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.test_delete.client": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.test_delete.TEST_DATA": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 50, "signature": 0, "bases": 0, "doc": 3}, "backend.test_delete.login_user": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 11}, "backend.test_delete.mock_db_session": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "backend.test_delete.test_delete_entry_success": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 8}, "backend.test_delete.test_delete_journal_success": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 8}, "backend.test_delete.test_delete_group_success": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 8}, "backend.test_delete.test_delete_user_success": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 8}, "backend.test_read": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.test_read.client": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.test_read.login_user": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 11}, "backend.test_read.mock_db_session": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "backend.test_read.mock_user": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 11}, "backend.test_read.test_read_entries_success": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 10}, "backend.test_read.test_read_journal_success": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 10}, "backend.test_read.test_read_journal_not_authorized": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 14}, "backend.test_read.test_read_journal_no_entries": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 13}, "backend.test_search": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.test_search.client": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.test_search.login_user": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 11}, "backend.test_search.mock_db_session": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "backend.test_search.mock_user_and_journals": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 11}, "backend.test_search.test_search_entry": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 8}, "backend.test_search.test_search_entry_in_journal": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 10}, "backend.test_search.test_search_journal_by_date": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 10}, "backend.test_search.test_search_journal_by_date_invalid_format": {"qualname": 7, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 14}, "backend.test_update": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.test_update.client": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.test_update.login_user": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 11}, "backend.test_update.mock_db_session": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "backend.test_update.mock_user": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 11}, "backend.test_update.test_update_user_first_name": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 10}, "backend.test_update.test_update_user_last_name": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 10}, "backend.test_update.test_update_user_entry": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 9}, "backend.test_update.test_update_journal": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 8}, "backend.test_user_detail": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.test_user_detail.client": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "backend.test_user_detail.user_id": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "backend.test_user_detail.journal_id": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "backend.test_user_detail.entry_id": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "backend.test_user_detail.first_name": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "backend.test_user_detail.last_name": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "backend.test_user_detail.journal_title": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "backend.test_user_detail.entry_text": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "backend.test_user_detail.TEST_USER": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 39, "signature": 0, "bases": 0, "doc": 3}, "backend.test_user_detail.TEST_JOURNAL": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 39, "signature": 0, "bases": 0, "doc": 3}, "backend.test_user_detail.TEST_ENTRY": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 31, "signature": 0, "bases": 0, "doc": 3}, "backend.test_user_detail.login_user": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 11}, "backend.test_user_detail.mock_db_session": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "backend.test_user_detail.mock_user": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 11}, "backend.test_user_detail.mock_create_journal": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 10}, "backend.test_user_detail.mock_journals": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 10}, "backend.test_user_detail.mock_entries": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 8}, "backend.test_user_detail.test_get_user_details_success": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 9}, "backend.test_user_detail.test_create_and_read_journal": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 11}, "backend.test_user_detail.test_create_and_read_entry": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 11}, "backend.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "backend.utils.pwd_context": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "backend.utils.hash_password": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "backend.utils.verify_password": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}}, "length": 196, "save": true}, "index": {"qualname": {"root": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"backend.auth.SECRET_KEY": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"backend.populate_db_with_fake_entries.session": {"tf": 1}, "backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"backend.models.SessionLocal": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"backend.routers.ai_prof.search_lectures": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}}, "df": 11}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"backend.main.signup": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}}, "df": 7}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"backend.auth.SECRET_KEY": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"backend.auth.ALGORITHM": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {"backend.routers.read_apis.get_all_tags": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES": {"tf": 1}, "backend.auth.create_access_token": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"backend.main.app": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.update_apis.add_tag_to_journal": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.test_read.test_read_journal_not_authorized": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"backend.routers.update_apis.add_tag_to_journal": {"tf": 1}}, "df": 1, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES": {"tf": 1}, "backend.auth.create_access_token": {"tf": 1}, "backend.auth.verify_token": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"backend.routers.create_apis.create_tag": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 6, "s": {"docs": {"backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}, "backend.test_delete.TEST_DATA": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_update.test_update_journal": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1}, "backend.test_user_detail.TEST_JOURNAL": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 27}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"backend.test_user_detail.entry_text": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"backend.test_user_detail.journal_title": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.engine": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"backend.populate_db_with_fake_entries.create_fake_entries": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}}, "df": 7}}}, "y": {"docs": {"backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.rag_search.entry_metadata": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_user_detail.entry_id": {"tf": 1}, "backend.test_user_detail.entry_text": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 16}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.rag_search.embed_and_index": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"backend.routers.rag_search.embedding_model": {"tf": 1}}, "df": 1, "s": {"docs": {"backend.routers.ai_prof.get_embeddings": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"backend.models.Base.metadata": {"tf": 1}, "backend.routers.rag_search.entry_metadata": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}, "backend.routers.rag_search.embedding_model": {"tf": 1}, "backend.routers.rag_search.MODEL_PATH": {"tf": 1}, "backend.routers.rag_search.check_model_downloaded": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}}, "df": 18}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.auth.create_access_token": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_users": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_entries": {"tf": 1}, "backend.routers.create_apis.create_journal": {"tf": 1}, "backend.routers.create_apis.create_group": {"tf": 1}, "backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.create_apis.create_tag": {"tf": 1}, "backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 23}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"backend.main.health_check": {"tf": 1}, "backend.routers.rag_search.check_model_downloaded": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}}, "df": 6, "s": {"docs": {"backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 1}, "backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"backend.routers.ai_prof.collection_name": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"backend.utils.pwd_context": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.ai_prof.client": {"tf": 1}, "backend.test_create_api.client": {"tf": 1}, "backend.test_delete.client": {"tf": 1}, "backend.test_read.client": {"tf": 1}, "backend.test_search.client": {"tf": 1}, "backend.test_update.client": {"tf": 1}, "backend.test_user_detail.client": {"tf": 1}}, "df": 7}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"backend.auth.verify_token": {"tf": 1}, "backend.utils.verify_password": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"backend.routers.rag_search.vector_search": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"backend.main.get_db": {"tf": 1}, "backend.routers.ai_prof.get_embeddings": {"tf": 1}, "backend.routers.ai_prof.get_prof_response": {"tf": 1}, "backend.routers.create_apis.get_db": {"tf": 1}, "backend.routers.delete_apis.get_db": {"tf": 1}, "backend.routers.get_user.get_db": {"tf": 1}, "backend.routers.get_user.get_user_details": {"tf": 1}, "backend.routers.get_user.get_user_journals": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.rag_search.get_db": {"tf": 1}, "backend.routers.read.get_db": {"tf": 1}, "backend.routers.read_apis.get_db": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.search.get_db": {"tf": 1}, "backend.routers.update_apis.get_db": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}}, "df": 19}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {"backend.routers.ai_prof.gemini": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"backend.routers.create_apis.create_group": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}}, "df": 7, "s": {"docs": {"backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "b": {"docs": {"backend.main.get_db": {"tf": 1}, "backend.routers.create_apis.get_db": {"tf": 1}, "backend.routers.delete_apis.get_db": {"tf": 1}, "backend.routers.get_user.get_db": {"tf": 1}, "backend.routers.rag_search.get_db": {"tf": 1}, "backend.routers.read.get_db": {"tf": 1}, "backend.routers.read_apis.get_db": {"tf": 1}, "backend.routers.search.get_db": {"tf": 1}, "backend.routers.update_apis.get_db": {"tf": 1}, "backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}}, "df": 15}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"backend.test_delete.TEST_DATA": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.DATABASE_URL": {"tf": 1}, "backend.populate_db_with_fake_entries.populate_database": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}}, "df": 12}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.get_user.get_user_details": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.rag_search.check_model_downloaded": {"tf": 1}}, "df": 1}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"backend.main.health_check": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"backend.utils.hash_password": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.models.User.hashed_password": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"backend.main.login": {"tf": 1}, "backend.test_create_api.login_user": {"tf": 1}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_user_detail.login_user": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.ai_prof.search_lectures": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_user_detail.last_name": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.main.protected_route": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"backend.routers.ai_prof.get_prof_response": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"backend.models.User.hashed_password": {"tf": 1}, "backend.utils.hash_password": {"tf": 1}, "backend.utils.verify_password": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"backend.routers.rag_search.MODEL_PATH": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.populate_db_with_fake_entries.populate_database": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "d": {"docs": {"backend.utils.pwd_context": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.main.protected_route": {"tf": 1}}, "df": 1, "r": {"docs": {"backend.routers.ai_prof.router": {"tf": 1}, "backend.routers.create_apis.router": {"tf": 1}, "backend.routers.delete_apis.router": {"tf": 1}, "backend.routers.example.router": {"tf": 1}, "backend.routers.get_user.router": {"tf": 1}, "backend.routers.rag_search.router": {"tf": 1}, "backend.routers.read.router": {"tf": 1}, "backend.routers.read_apis.router": {"tf": 1}, "backend.routers.search.router": {"tf": 1}, "backend.routers.update_apis.router": {"tf": 1}}, "df": 10}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"backend.models.Base.registry": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.ai_prof.get_prof_response": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.example.read_item": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 15}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.Base.__init__": {"tf": 1}, "backend.models.Base.registry": {"tf": 1}, "backend.models.Base.metadata": {"tf": 1}}, "df": 4, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"backend.routers.ai_prof.BASEDIR": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"backend.routers.rag_search.faiss_index": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"backend.models.User.id": {"tf": 1}, "backend.test_user_detail.user_id": {"tf": 1}, "backend.test_user_detail.journal_id": {"tf": 1}, "backend.test_user_detail.entry_id": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"backend.routers.example.read_item": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"backend.models.User": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}, "backend.models.User.id": {"tf": 1}, "backend.models.User.username": {"tf": 1}, "backend.models.User.hashed_password": {"tf": 1}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.get_user.get_user_details": {"tf": 1}, "backend.routers.get_user.get_user_journals": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.test_create_api.login_user": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_user_detail.user_id": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1}, "backend.test_user_detail.login_user": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}}, "df": 29, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.User.username": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"backend.populate_db_with_fake_entries.create_fake_users": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"backend.models.DATABASE_URL": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_update.test_update_journal": {"tf": 1}}, "df": 10}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"backend.populate_db_with_fake_entries.fake": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_users": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_entries": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.rag_search.faiss_index": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_user_detail.first_name": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"backend.routers.create_apis.create_journal": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}, "backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}, "backend.test_update.test_update_journal": {"tf": 1}, "backend.test_user_detail.journal_id": {"tf": 1}, "backend.test_user_detail.journal_title": {"tf": 1}, "backend.test_user_detail.TEST_JOURNAL": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}}, "df": 29, "s": {"docs": {"backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 1}, "backend.routers.get_user.get_user_journals": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}}, "df": 4}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.ai_prof.collection_name": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_user_detail.first_name": {"tf": 1}, "backend.test_user_detail.last_name": {"tf": 1}}, "df": 9}}}, "o": {"docs": {"backend.test_read.test_read_journal_no_entries": {"tf": 1}}, "df": 1, "t": {"docs": {"backend.test_read.test_read_journal_not_authorized": {"tf": 1}}, "df": 1}}}}}, "fullname": {"root": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"backend": {"tf": 1}, "backend.auth": {"tf": 1}, "backend.auth.SECRET_KEY": {"tf": 1}, "backend.auth.ALGORITHM": {"tf": 1}, "backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES": {"tf": 1}, "backend.auth.create_access_token": {"tf": 1}, "backend.auth.verify_token": {"tf": 1}, "backend.main": {"tf": 1}, "backend.main.app": {"tf": 1}, "backend.main.get_db": {"tf": 1}, "backend.main.health_check": {"tf": 1}, "backend.main.signup": {"tf": 1}, "backend.main.login": {"tf": 1}, "backend.main.protected_route": {"tf": 1}, "backend.models": {"tf": 1}, "backend.models.Base": {"tf": 1}, "backend.models.Base.__init__": {"tf": 1}, "backend.models.Base.registry": {"tf": 1}, "backend.models.Base.metadata": {"tf": 1}, "backend.models.User": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}, "backend.models.User.id": {"tf": 1}, "backend.models.User.username": {"tf": 1}, "backend.models.User.hashed_password": {"tf": 1}, "backend.models.DATABASE_URL": {"tf": 1}, "backend.models.engine": {"tf": 1}, "backend.models.SessionLocal": {"tf": 1}, "backend.populate_db_with_fake_entries": {"tf": 1}, "backend.populate_db_with_fake_entries.fake": {"tf": 1}, "backend.populate_db_with_fake_entries.session": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_users": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_entries": {"tf": 1}, "backend.populate_db_with_fake_entries.populate_database": {"tf": 1}, "backend.routers": {"tf": 1}, "backend.routers.ai_prof": {"tf": 1}, "backend.routers.ai_prof.BASEDIR": {"tf": 1}, "backend.routers.ai_prof.model": {"tf": 1}, "backend.routers.ai_prof.router": {"tf": 1}, "backend.routers.ai_prof.client": {"tf": 1}, "backend.routers.ai_prof.collection_name": {"tf": 1}, "backend.routers.ai_prof.search_lectures": {"tf": 1}, "backend.routers.ai_prof.get_embeddings": {"tf": 1}, "backend.routers.ai_prof.gemini": {"tf": 1}, "backend.routers.ai_prof.get_prof_response": {"tf": 1}, "backend.routers.create_apis": {"tf": 1}, "backend.routers.create_apis.router": {"tf": 1}, "backend.routers.create_apis.get_db": {"tf": 1}, "backend.routers.create_apis.create_journal": {"tf": 1}, "backend.routers.create_apis.create_group": {"tf": 1}, "backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.create_apis.create_tag": {"tf": 1}, "backend.routers.delete_apis": {"tf": 1}, "backend.routers.delete_apis.router": {"tf": 1}, "backend.routers.delete_apis.get_db": {"tf": 1}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.example": {"tf": 1}, "backend.routers.example.router": {"tf": 1}, "backend.routers.example.read_item": {"tf": 1}, "backend.routers.get_user": {"tf": 1}, "backend.routers.get_user.router": {"tf": 1}, "backend.routers.get_user.get_db": {"tf": 1}, "backend.routers.get_user.get_user_details": {"tf": 1}, "backend.routers.get_user.get_user_journals": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.rag_search": {"tf": 1}, "backend.routers.rag_search.router": {"tf": 1}, "backend.routers.rag_search.embedding_model": {"tf": 1}, "backend.routers.rag_search.faiss_index": {"tf": 1}, "backend.routers.rag_search.entry_metadata": {"tf": 1}, "backend.routers.rag_search.MODEL_PATH": {"tf": 1}, "backend.routers.rag_search.check_model_downloaded": {"tf": 1}, "backend.routers.rag_search.get_db": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.read": {"tf": 1}, "backend.routers.read.router": {"tf": 1}, "backend.routers.read.get_db": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis": {"tf": 1}, "backend.routers.read_apis.router": {"tf": 1}, "backend.routers.read_apis.get_db": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.search": {"tf": 1}, "backend.routers.search.router": {"tf": 1}, "backend.routers.search.get_db": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.routers.update_apis": {"tf": 1}, "backend.routers.update_apis.router": {"tf": 1}, "backend.routers.update_apis.get_db": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}, "backend.test_create_api": {"tf": 1}, "backend.test_create_api.client": {"tf": 1}, "backend.test_create_api.login_user": {"tf": 1}, "backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}, "backend.test_delete": {"tf": 1}, "backend.test_delete.client": {"tf": 1}, "backend.test_delete.TEST_DATA": {"tf": 1}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read": {"tf": 1}, "backend.test_read.client": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_search": {"tf": 1}, "backend.test_search.client": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}, "backend.test_update": {"tf": 1}, "backend.test_update.client": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_update.test_update_journal": {"tf": 1}, "backend.test_user_detail": {"tf": 1}, "backend.test_user_detail.client": {"tf": 1}, "backend.test_user_detail.user_id": {"tf": 1}, "backend.test_user_detail.journal_id": {"tf": 1}, "backend.test_user_detail.entry_id": {"tf": 1}, "backend.test_user_detail.first_name": {"tf": 1}, "backend.test_user_detail.last_name": {"tf": 1}, "backend.test_user_detail.journal_title": {"tf": 1}, "backend.test_user_detail.entry_text": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1}, "backend.test_user_detail.TEST_JOURNAL": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}, "backend.test_user_detail.login_user": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}, "backend.utils": {"tf": 1}, "backend.utils.pwd_context": {"tf": 1}, "backend.utils.hash_password": {"tf": 1}, "backend.utils.verify_password": {"tf": 1}}, "df": 196}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.Base.__init__": {"tf": 1}, "backend.models.Base.registry": {"tf": 1}, "backend.models.Base.metadata": {"tf": 1}}, "df": 4, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"backend.routers.ai_prof.BASEDIR": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"backend.auth": {"tf": 1}, "backend.auth.SECRET_KEY": {"tf": 1}, "backend.auth.ALGORITHM": {"tf": 1}, "backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES": {"tf": 1}, "backend.auth.create_access_token": {"tf": 1}, "backend.auth.verify_token": {"tf": 1}}, "df": 6, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.test_read.test_read_journal_not_authorized": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"backend.auth.ALGORITHM": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {"backend.routers.read_apis.get_all_tags": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES": {"tf": 1}, "backend.auth.create_access_token": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"backend.main.app": {"tf": 1}}, "df": 1}, "i": {"docs": {"backend.test_create_api": {"tf": 1}, "backend.test_create_api.client": {"tf": 1}, "backend.test_create_api.login_user": {"tf": 1}, "backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}}, "df": 13, "s": {"docs": {"backend.routers.create_apis": {"tf": 1}, "backend.routers.create_apis.router": {"tf": 1}, "backend.routers.create_apis.get_db": {"tf": 1}, "backend.routers.create_apis.create_journal": {"tf": 1}, "backend.routers.create_apis.create_group": {"tf": 1}, "backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.create_apis.create_tag": {"tf": 1}, "backend.routers.delete_apis": {"tf": 1}, "backend.routers.delete_apis.router": {"tf": 1}, "backend.routers.delete_apis.get_db": {"tf": 1}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.read_apis": {"tf": 1}, "backend.routers.read_apis.router": {"tf": 1}, "backend.routers.read_apis.get_db": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.update_apis": {"tf": 1}, "backend.routers.update_apis.router": {"tf": 1}, "backend.routers.update_apis.get_db": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 41}}}, "i": {"docs": {"backend.routers.ai_prof": {"tf": 1}, "backend.routers.ai_prof.BASEDIR": {"tf": 1}, "backend.routers.ai_prof.model": {"tf": 1}, "backend.routers.ai_prof.router": {"tf": 1}, "backend.routers.ai_prof.client": {"tf": 1}, "backend.routers.ai_prof.collection_name": {"tf": 1}, "backend.routers.ai_prof.search_lectures": {"tf": 1}, "backend.routers.ai_prof.get_embeddings": {"tf": 1}, "backend.routers.ai_prof.gemini": {"tf": 1}, "backend.routers.ai_prof.get_prof_response": {"tf": 1}}, "df": 10}, "n": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.update_apis.add_tag_to_journal": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"backend.auth.SECRET_KEY": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"backend.populate_db_with_fake_entries.session": {"tf": 1}, "backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"backend.models.SessionLocal": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"backend.routers.ai_prof.search_lectures": {"tf": 1}, "backend.routers.rag_search": {"tf": 1}, "backend.routers.rag_search.router": {"tf": 1}, "backend.routers.rag_search.embedding_model": {"tf": 1}, "backend.routers.rag_search.faiss_index": {"tf": 1}, "backend.routers.rag_search.entry_metadata": {"tf": 1}, "backend.routers.rag_search.MODEL_PATH": {"tf": 1}, "backend.routers.rag_search.check_model_downloaded": {"tf": 1}, "backend.routers.rag_search.get_db": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1.4142135623730951}, "backend.routers.search": {"tf": 1}, "backend.routers.search.router": {"tf": 1}, "backend.routers.search.get_db": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1.4142135623730951}, "backend.routers.search.search_entry_in_journal": {"tf": 1.4142135623730951}, "backend.routers.search.search_code": {"tf": 1.4142135623730951}, "backend.routers.search.search_code_in_journal": {"tf": 1.4142135623730951}, "backend.routers.search.search_journal_by_date": {"tf": 1.4142135623730951}, "backend.test_search": {"tf": 1}, "backend.test_search.client": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1.4142135623730951}, "backend.test_search.test_search_entry_in_journal": {"tf": 1.4142135623730951}, "backend.test_search.test_search_journal_by_date": {"tf": 1.4142135623730951}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1.4142135623730951}}, "df": 28}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"backend.main.signup": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}}, "df": 7}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"backend.auth.SECRET_KEY": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"backend.routers.update_apis.add_tag_to_journal": {"tf": 1}}, "df": 1, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES": {"tf": 1}, "backend.auth.create_access_token": {"tf": 1}, "backend.auth.verify_token": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"backend.routers.create_apis.create_tag": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 6, "s": {"docs": {"backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.test_create_api": {"tf": 1}, "backend.test_create_api.client": {"tf": 1}, "backend.test_create_api.login_user": {"tf": 1}, "backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_create_api.test_create_journal": {"tf": 1.4142135623730951}, "backend.test_create_api.test_create_group": {"tf": 1.4142135623730951}, "backend.test_create_api.test_create_entry": {"tf": 1.4142135623730951}, "backend.test_create_api.test_create_code": {"tf": 1.4142135623730951}, "backend.test_delete": {"tf": 1}, "backend.test_delete.client": {"tf": 1}, "backend.test_delete.TEST_DATA": {"tf": 1.4142135623730951}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1.4142135623730951}, "backend.test_delete.test_delete_journal_success": {"tf": 1.4142135623730951}, "backend.test_delete.test_delete_group_success": {"tf": 1.4142135623730951}, "backend.test_delete.test_delete_user_success": {"tf": 1.4142135623730951}, "backend.test_read": {"tf": 1}, "backend.test_read.client": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1.4142135623730951}, "backend.test_read.test_read_journal_success": {"tf": 1.4142135623730951}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1.4142135623730951}, "backend.test_read.test_read_journal_no_entries": {"tf": 1.4142135623730951}, "backend.test_search": {"tf": 1}, "backend.test_search.client": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1.4142135623730951}, "backend.test_search.test_search_entry_in_journal": {"tf": 1.4142135623730951}, "backend.test_search.test_search_journal_by_date": {"tf": 1.4142135623730951}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1.4142135623730951}, "backend.test_update": {"tf": 1}, "backend.test_update.client": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1.4142135623730951}, "backend.test_update.test_update_user_last_name": {"tf": 1.4142135623730951}, "backend.test_update.test_update_user_entry": {"tf": 1.4142135623730951}, "backend.test_update.test_update_journal": {"tf": 1.4142135623730951}, "backend.test_user_detail": {"tf": 1}, "backend.test_user_detail.client": {"tf": 1}, "backend.test_user_detail.user_id": {"tf": 1}, "backend.test_user_detail.journal_id": {"tf": 1}, "backend.test_user_detail.entry_id": {"tf": 1}, "backend.test_user_detail.first_name": {"tf": 1}, "backend.test_user_detail.last_name": {"tf": 1}, "backend.test_user_detail.journal_title": {"tf": 1}, "backend.test_user_detail.entry_text": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1.4142135623730951}, "backend.test_user_detail.TEST_JOURNAL": {"tf": 1.4142135623730951}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1.4142135623730951}, "backend.test_user_detail.login_user": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1.4142135623730951}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1.4142135623730951}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1.4142135623730951}}, "df": 70}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"backend.test_user_detail.entry_text": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"backend.test_user_detail.journal_title": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.example": {"tf": 1}, "backend.routers.example.router": {"tf": 1}, "backend.routers.example.read_item": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.engine": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"backend.populate_db_with_fake_entries": {"tf": 1}, "backend.populate_db_with_fake_entries.fake": {"tf": 1}, "backend.populate_db_with_fake_entries.session": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_users": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_entries": {"tf": 1.4142135623730951}, "backend.populate_db_with_fake_entries.populate_database": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}}, "df": 15}}}, "y": {"docs": {"backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.rag_search.entry_metadata": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_user_detail.entry_id": {"tf": 1}, "backend.test_user_detail.entry_text": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 16}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.rag_search.embed_and_index": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"backend.routers.rag_search.embedding_model": {"tf": 1}}, "df": 1, "s": {"docs": {"backend.routers.ai_prof.get_embeddings": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"backend.main": {"tf": 1}, "backend.main.app": {"tf": 1}, "backend.main.get_db": {"tf": 1}, "backend.main.health_check": {"tf": 1}, "backend.main.signup": {"tf": 1}, "backend.main.login": {"tf": 1}, "backend.main.protected_route": {"tf": 1}}, "df": 7}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}, "backend.routers.rag_search.embedding_model": {"tf": 1}, "backend.routers.rag_search.MODEL_PATH": {"tf": 1}, "backend.routers.rag_search.check_model_downloaded": {"tf": 1}}, "df": 4, "s": {"docs": {"backend.models": {"tf": 1}, "backend.models.Base": {"tf": 1}, "backend.models.Base.__init__": {"tf": 1}, "backend.models.Base.registry": {"tf": 1}, "backend.models.Base.metadata": {"tf": 1}, "backend.models.User": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}, "backend.models.User.id": {"tf": 1}, "backend.models.User.username": {"tf": 1}, "backend.models.User.hashed_password": {"tf": 1}, "backend.models.DATABASE_URL": {"tf": 1}, "backend.models.engine": {"tf": 1}, "backend.models.SessionLocal": {"tf": 1}}, "df": 13}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}}, "df": 18}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"backend.models.Base.metadata": {"tf": 1}, "backend.routers.rag_search.entry_metadata": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.auth.create_access_token": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_users": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_entries": {"tf": 1}, "backend.routers.create_apis": {"tf": 1}, "backend.routers.create_apis.router": {"tf": 1}, "backend.routers.create_apis.get_db": {"tf": 1}, "backend.routers.create_apis.create_journal": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_group": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_codes": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_code": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_entry": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_tag": {"tf": 1.4142135623730951}, "backend.test_create_api": {"tf": 1}, "backend.test_create_api.client": {"tf": 1}, "backend.test_create_api.login_user": {"tf": 1}, "backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_create_api.mock_create_journal": {"tf": 1.4142135623730951}, "backend.test_create_api.mock_create_group": {"tf": 1.4142135623730951}, "backend.test_create_api.mock_create_entry": {"tf": 1.4142135623730951}, "backend.test_create_api.mock_create_code": {"tf": 1.4142135623730951}, "backend.test_create_api.test_create_journal": {"tf": 1.4142135623730951}, "backend.test_create_api.test_create_group": {"tf": 1.4142135623730951}, "backend.test_create_api.test_create_entry": {"tf": 1.4142135623730951}, "backend.test_create_api.test_create_code": {"tf": 1.4142135623730951}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 31}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"backend.main.health_check": {"tf": 1}, "backend.routers.rag_search.check_model_downloaded": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}}, "df": 6, "s": {"docs": {"backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 1}, "backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"backend.routers.ai_prof.collection_name": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"backend.utils.pwd_context": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.ai_prof.client": {"tf": 1}, "backend.test_create_api.client": {"tf": 1}, "backend.test_delete.client": {"tf": 1}, "backend.test_read.client": {"tf": 1}, "backend.test_search.client": {"tf": 1}, "backend.test_update.client": {"tf": 1}, "backend.test_user_detail.client": {"tf": 1}}, "df": 7}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"backend.auth.verify_token": {"tf": 1}, "backend.utils.verify_password": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"backend.routers.rag_search.vector_search": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"backend.main.get_db": {"tf": 1}, "backend.routers.ai_prof.get_embeddings": {"tf": 1}, "backend.routers.ai_prof.get_prof_response": {"tf": 1}, "backend.routers.create_apis.get_db": {"tf": 1}, "backend.routers.delete_apis.get_db": {"tf": 1}, "backend.routers.get_user": {"tf": 1}, "backend.routers.get_user.router": {"tf": 1}, "backend.routers.get_user.get_db": {"tf": 1.4142135623730951}, "backend.routers.get_user.get_user_details": {"tf": 1.4142135623730951}, "backend.routers.get_user.get_user_journals": {"tf": 1.4142135623730951}, "backend.routers.get_user.get_journal_codes": {"tf": 1.4142135623730951}, "backend.routers.get_user.get_journal_entries": {"tf": 1.4142135623730951}, "backend.routers.rag_search.get_db": {"tf": 1}, "backend.routers.read.get_db": {"tf": 1}, "backend.routers.read_apis.get_db": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.search.get_db": {"tf": 1}, "backend.routers.update_apis.get_db": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}}, "df": 21}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {"backend.routers.ai_prof.gemini": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"backend.routers.create_apis.create_group": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}}, "df": 7, "s": {"docs": {"backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "b": {"docs": {"backend.main.get_db": {"tf": 1}, "backend.populate_db_with_fake_entries": {"tf": 1}, "backend.populate_db_with_fake_entries.fake": {"tf": 1}, "backend.populate_db_with_fake_entries.session": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_users": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_entries": {"tf": 1}, "backend.populate_db_with_fake_entries.populate_database": {"tf": 1}, "backend.routers.create_apis.get_db": {"tf": 1}, "backend.routers.delete_apis.get_db": {"tf": 1}, "backend.routers.get_user.get_db": {"tf": 1}, "backend.routers.rag_search.get_db": {"tf": 1}, "backend.routers.read.get_db": {"tf": 1}, "backend.routers.read_apis.get_db": {"tf": 1}, "backend.routers.search.get_db": {"tf": 1}, "backend.routers.update_apis.get_db": {"tf": 1}, "backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}}, "df": 24}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"backend.test_delete.TEST_DATA": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.DATABASE_URL": {"tf": 1}, "backend.populate_db_with_fake_entries.populate_database": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.delete_apis": {"tf": 1}, "backend.routers.delete_apis.router": {"tf": 1}, "backend.routers.delete_apis.get_db": {"tf": 1}, "backend.routers.delete_apis.delete_user": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_from_group": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_codes": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_entry": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_journal": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_group": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_tag": {"tf": 1.4142135623730951}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}, "backend.test_delete": {"tf": 1}, "backend.test_delete.client": {"tf": 1}, "backend.test_delete.TEST_DATA": {"tf": 1}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1.4142135623730951}, "backend.test_delete.test_delete_journal_success": {"tf": 1.4142135623730951}, "backend.test_delete.test_delete_group_success": {"tf": 1.4142135623730951}, "backend.test_delete.test_delete_user_success": {"tf": 1.4142135623730951}}, "df": 20}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"backend.test_user_detail": {"tf": 1}, "backend.test_user_detail.client": {"tf": 1}, "backend.test_user_detail.user_id": {"tf": 1}, "backend.test_user_detail.journal_id": {"tf": 1}, "backend.test_user_detail.entry_id": {"tf": 1}, "backend.test_user_detail.first_name": {"tf": 1}, "backend.test_user_detail.last_name": {"tf": 1}, "backend.test_user_detail.journal_title": {"tf": 1}, "backend.test_user_detail.entry_text": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1}, "backend.test_user_detail.TEST_JOURNAL": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}, "backend.test_user_detail.login_user": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 21, "s": {"docs": {"backend.routers.get_user.get_user_details": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.rag_search.check_model_downloaded": {"tf": 1}}, "df": 1}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"backend.main.health_check": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"backend.utils.hash_password": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.models.User.hashed_password": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"backend.main.login": {"tf": 1}, "backend.test_create_api.login_user": {"tf": 1}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_user_detail.login_user": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.ai_prof.search_lectures": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_user_detail.last_name": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.main.protected_route": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"backend.routers.ai_prof": {"tf": 1}, "backend.routers.ai_prof.BASEDIR": {"tf": 1}, "backend.routers.ai_prof.model": {"tf": 1}, "backend.routers.ai_prof.router": {"tf": 1}, "backend.routers.ai_prof.client": {"tf": 1}, "backend.routers.ai_prof.collection_name": {"tf": 1}, "backend.routers.ai_prof.search_lectures": {"tf": 1}, "backend.routers.ai_prof.get_embeddings": {"tf": 1}, "backend.routers.ai_prof.gemini": {"tf": 1}, "backend.routers.ai_prof.get_prof_response": {"tf": 1.4142135623730951}}, "df": 10}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"backend.models.User.hashed_password": {"tf": 1}, "backend.utils.hash_password": {"tf": 1}, "backend.utils.verify_password": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"backend.routers.rag_search.MODEL_PATH": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.populate_db_with_fake_entries": {"tf": 1}, "backend.populate_db_with_fake_entries.fake": {"tf": 1}, "backend.populate_db_with_fake_entries.session": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_users": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_entries": {"tf": 1}, "backend.populate_db_with_fake_entries.populate_database": {"tf": 1.4142135623730951}}, "df": 9}}}}}}}, "w": {"docs": {}, "df": 0, "d": {"docs": {"backend.utils.pwd_context": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.main.protected_route": {"tf": 1}}, "df": 1, "r": {"docs": {"backend.routers.ai_prof.router": {"tf": 1}, "backend.routers.create_apis.router": {"tf": 1}, "backend.routers.delete_apis.router": {"tf": 1}, "backend.routers.example.router": {"tf": 1}, "backend.routers.get_user.router": {"tf": 1}, "backend.routers.rag_search.router": {"tf": 1}, "backend.routers.read.router": {"tf": 1}, "backend.routers.read_apis.router": {"tf": 1}, "backend.routers.search.router": {"tf": 1}, "backend.routers.update_apis.router": {"tf": 1}}, "df": 10, "s": {"docs": {"backend.routers": {"tf": 1}, "backend.routers.ai_prof": {"tf": 1}, "backend.routers.ai_prof.BASEDIR": {"tf": 1}, "backend.routers.ai_prof.model": {"tf": 1}, "backend.routers.ai_prof.router": {"tf": 1}, "backend.routers.ai_prof.client": {"tf": 1}, "backend.routers.ai_prof.collection_name": {"tf": 1}, "backend.routers.ai_prof.search_lectures": {"tf": 1}, "backend.routers.ai_prof.get_embeddings": {"tf": 1}, "backend.routers.ai_prof.gemini": {"tf": 1}, "backend.routers.ai_prof.get_prof_response": {"tf": 1}, "backend.routers.create_apis": {"tf": 1}, "backend.routers.create_apis.router": {"tf": 1}, "backend.routers.create_apis.get_db": {"tf": 1}, "backend.routers.create_apis.create_journal": {"tf": 1}, "backend.routers.create_apis.create_group": {"tf": 1}, "backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.create_apis.create_tag": {"tf": 1}, "backend.routers.delete_apis": {"tf": 1}, "backend.routers.delete_apis.router": {"tf": 1}, "backend.routers.delete_apis.get_db": {"tf": 1}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.example": {"tf": 1}, "backend.routers.example.router": {"tf": 1}, "backend.routers.example.read_item": {"tf": 1}, "backend.routers.get_user": {"tf": 1}, "backend.routers.get_user.router": {"tf": 1}, "backend.routers.get_user.get_db": {"tf": 1}, "backend.routers.get_user.get_user_details": {"tf": 1}, "backend.routers.get_user.get_user_journals": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.rag_search": {"tf": 1}, "backend.routers.rag_search.router": {"tf": 1}, "backend.routers.rag_search.embedding_model": {"tf": 1}, "backend.routers.rag_search.faiss_index": {"tf": 1}, "backend.routers.rag_search.entry_metadata": {"tf": 1}, "backend.routers.rag_search.MODEL_PATH": {"tf": 1}, "backend.routers.rag_search.check_model_downloaded": {"tf": 1}, "backend.routers.rag_search.get_db": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.read": {"tf": 1}, "backend.routers.read.router": {"tf": 1}, "backend.routers.read.get_db": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis": {"tf": 1}, "backend.routers.read_apis.router": {"tf": 1}, "backend.routers.read_apis.get_db": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.search": {"tf": 1}, "backend.routers.search.router": {"tf": 1}, "backend.routers.search.get_db": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.routers.update_apis": {"tf": 1}, "backend.routers.update_apis.router": {"tf": 1}, "backend.routers.update_apis.get_db": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 86}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"backend.models.Base.registry": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.ai_prof.get_prof_response": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.example.read_item": {"tf": 1}, "backend.routers.read": {"tf": 1}, "backend.routers.read.router": {"tf": 1}, "backend.routers.read.get_db": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1.4142135623730951}, "backend.routers.read.read_codes": {"tf": 1.4142135623730951}, "backend.routers.read.read_journal": {"tf": 1.4142135623730951}, "backend.routers.read_apis": {"tf": 1}, "backend.routers.read_apis.router": {"tf": 1}, "backend.routers.read_apis.get_db": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_codes": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_journal": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1.4142135623730951}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1.4142135623730951}, "backend.test_read": {"tf": 1}, "backend.test_read.client": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1.4142135623730951}, "backend.test_read.test_read_journal_success": {"tf": 1.4142135623730951}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1.4142135623730951}, "backend.test_read.test_read_journal_no_entries": {"tf": 1.4142135623730951}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 29}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"backend.routers.rag_search": {"tf": 1}, "backend.routers.rag_search.router": {"tf": 1}, "backend.routers.rag_search.embedding_model": {"tf": 1}, "backend.routers.rag_search.faiss_index": {"tf": 1}, "backend.routers.rag_search.entry_metadata": {"tf": 1}, "backend.routers.rag_search.MODEL_PATH": {"tf": 1}, "backend.routers.rag_search.check_model_downloaded": {"tf": 1}, "backend.routers.rag_search.get_db": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}}, "df": 10}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"backend.routers.rag_search.faiss_index": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"backend.models.User.id": {"tf": 1}, "backend.test_user_detail.user_id": {"tf": 1}, "backend.test_user_detail.journal_id": {"tf": 1}, "backend.test_user_detail.entry_id": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"backend.routers.example.read_item": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"backend.models.User": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}, "backend.models.User.id": {"tf": 1}, "backend.models.User.username": {"tf": 1}, "backend.models.User.hashed_password": {"tf": 1}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.get_user": {"tf": 1}, "backend.routers.get_user.router": {"tf": 1}, "backend.routers.get_user.get_db": {"tf": 1}, "backend.routers.get_user.get_user_details": {"tf": 1.4142135623730951}, "backend.routers.get_user.get_user_journals": {"tf": 1.4142135623730951}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.test_create_api.login_user": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_user_detail": {"tf": 1}, "backend.test_user_detail.client": {"tf": 1}, "backend.test_user_detail.user_id": {"tf": 1.4142135623730951}, "backend.test_user_detail.journal_id": {"tf": 1}, "backend.test_user_detail.entry_id": {"tf": 1}, "backend.test_user_detail.first_name": {"tf": 1}, "backend.test_user_detail.last_name": {"tf": 1}, "backend.test_user_detail.journal_title": {"tf": 1}, "backend.test_user_detail.entry_text": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1.4142135623730951}, "backend.test_user_detail.TEST_JOURNAL": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}, "backend.test_user_detail.login_user": {"tf": 1.4142135623730951}, "backend.test_user_detail.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1.4142135623730951}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1.4142135623730951}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 50, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.User.username": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"backend.populate_db_with_fake_entries.create_fake_users": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"backend.models.DATABASE_URL": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.update_apis": {"tf": 1}, "backend.routers.update_apis.router": {"tf": 1}, "backend.routers.update_apis.get_db": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_user_last_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_entry": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_user_code": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_journal": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_tag_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}, "backend.test_update": {"tf": 1}, "backend.test_update.client": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1.4142135623730951}, "backend.test_update.test_update_user_last_name": {"tf": 1.4142135623730951}, "backend.test_update.test_update_user_entry": {"tf": 1.4142135623730951}, "backend.test_update.test_update_journal": {"tf": 1.4142135623730951}}, "df": 20}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"backend.utils": {"tf": 1}, "backend.utils.pwd_context": {"tf": 1}, "backend.utils.hash_password": {"tf": 1}, "backend.utils.verify_password": {"tf": 1}}, "df": 4}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"backend.populate_db_with_fake_entries": {"tf": 1}, "backend.populate_db_with_fake_entries.fake": {"tf": 1}, "backend.populate_db_with_fake_entries.session": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_users": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_entries": {"tf": 1}, "backend.populate_db_with_fake_entries.populate_database": {"tf": 1}}, "df": 9}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"backend.populate_db_with_fake_entries": {"tf": 1}, "backend.populate_db_with_fake_entries.fake": {"tf": 1.4142135623730951}, "backend.populate_db_with_fake_entries.session": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 1.4142135623730951}, "backend.populate_db_with_fake_entries.create_fake_users": {"tf": 1.4142135623730951}, "backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 1.4142135623730951}, "backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 1.4142135623730951}, "backend.populate_db_with_fake_entries.create_fake_entries": {"tf": 1.4142135623730951}, "backend.populate_db_with_fake_entries.populate_database": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.rag_search.faiss_index": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_user_detail.first_name": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"backend.routers.create_apis.create_journal": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}, "backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}, "backend.test_update.test_update_journal": {"tf": 1}, "backend.test_user_detail.journal_id": {"tf": 1}, "backend.test_user_detail.journal_title": {"tf": 1}, "backend.test_user_detail.TEST_JOURNAL": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}}, "df": 29, "s": {"docs": {"backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 1}, "backend.routers.get_user.get_user_journals": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}}, "df": 4}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.ai_prof.collection_name": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_user_detail.first_name": {"tf": 1}, "backend.test_user_detail.last_name": {"tf": 1}}, "df": 9}}}, "o": {"docs": {"backend.test_read.test_read_journal_no_entries": {"tf": 1}}, "df": 1, "t": {"docs": {"backend.test_read.test_read_journal_not_authorized": {"tf": 1}}, "df": 1}}}}}, "annotation": {"root": {"docs": {"backend.models.Base.registry": {"tf": 1}, "backend.models.Base.metadata": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {"backend.models.Base.metadata": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"backend.models.Base.registry": {"tf": 1}, "backend.models.Base.metadata": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"backend.models.Base.metadata": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"backend.models.Base.registry": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {"backend.models.Base.registry": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"backend.models.Base.registry": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"backend.models.Base.registry": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"backend.models.Base.metadata": {"tf": 1}}, "df": 1}}}}}}}}}}, "default_value": {"root": {"0": {"9": {"docs": {"backend.test_user_detail.TEST_JOURNAL": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"backend.test_delete.TEST_DATA": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}}, "df": 2}, "1": {"2": {"docs": {"backend.test_user_detail.TEST_JOURNAL": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"docs": {"backend.test_user_detail.user_id": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1}}, "df": 2}, "5": {"docs": {}, "df": 0, ":": {"3": {"4": {"docs": {}, "df": 0, ":": {"0": {"6": {"docs": {"backend.test_user_detail.TEST_JOURNAL": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}, "2": {"0": {"2": {"4": {"docs": {"backend.test_user_detail.TEST_JOURNAL": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"docs": {"backend.test_delete.TEST_DATA": {"tf": 1}, "backend.test_user_detail.journal_id": {"tf": 1}, "backend.test_user_detail.TEST_JOURNAL": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "5": {"3": {"docs": {"backend.test_user_detail.entry_id": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}}, "df": 2}, "docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}, "6": {"0": {"docs": {"backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES": {"tf": 1}}, "df": 1}, "docs": {"backend.test_delete.TEST_DATA": {"tf": 1}}, "df": 1}, "8": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"2": {"5": {"docs": {}, "df": 0, "c": {"5": {"docs": {}, "df": 0, "f": {"7": {"docs": {}, "df": 0, "b": {"2": {"docs": {}, "df": 0, "f": {"7": {"docs": {}, "df": 0, "b": {"8": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"1": {"7": {"8": {"docs": {}, "df": 0, "d": {"3": {"docs": {}, "df": 0, "a": {"2": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"5": {"docs": {}, "df": 0, "c": {"3": {"docs": {}, "df": 0, "f": {"0": {"1": {"3": {"5": {"9": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"6": {"docs": {}, "df": 0, "e": {"7": {"docs": {}, "df": 0, "d": {"2": {"6": {"4": {"docs": {}, "df": 0, "b": {"7": {"docs": {}, "df": 0, "c": {"3": {"docs": {}, "df": 0, "e": {"4": {"docs": {}, "df": 0, "f": {"8": {"4": {"6": {"docs": {}, "df": 0, "c": {"4": {"1": {"docs": {}, "df": 0, "e": {"9": {"docs": {}, "df": 0, "f": {"7": {"0": {"docs": {"backend.auth.SECRET_KEY": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {"backend.auth.SECRET_KEY": {"tf": 1.4142135623730951}, "backend.auth.ALGORITHM": {"tf": 1.4142135623730951}, "backend.main.app": {"tf": 1.4142135623730951}, "backend.models.Base.registry": {"tf": 1.4142135623730951}, "backend.models.Base.metadata": {"tf": 1}, "backend.models.DATABASE_URL": {"tf": 1.4142135623730951}, "backend.models.engine": {"tf": 1}, "backend.models.SessionLocal": {"tf": 1}, "backend.populate_db_with_fake_entries.fake": {"tf": 1.4142135623730951}, "backend.populate_db_with_fake_entries.session": {"tf": 1.4142135623730951}, "backend.routers.ai_prof.BASEDIR": {"tf": 1.4142135623730951}, "backend.routers.ai_prof.model": {"tf": 1.7320508075688772}, "backend.routers.ai_prof.router": {"tf": 1.4142135623730951}, "backend.routers.ai_prof.client": {"tf": 1.4142135623730951}, "backend.routers.ai_prof.collection_name": {"tf": 1.4142135623730951}, "backend.routers.create_apis.router": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.router": {"tf": 1.4142135623730951}, "backend.routers.example.router": {"tf": 1.4142135623730951}, "backend.routers.get_user.router": {"tf": 1.4142135623730951}, "backend.routers.rag_search.router": {"tf": 1.4142135623730951}, "backend.routers.rag_search.faiss_index": {"tf": 1.7320508075688772}, "backend.routers.rag_search.entry_metadata": {"tf": 1}, "backend.routers.rag_search.MODEL_PATH": {"tf": 1.4142135623730951}, "backend.routers.read.router": {"tf": 1.4142135623730951}, "backend.routers.read_apis.router": {"tf": 1.4142135623730951}, "backend.routers.search.router": {"tf": 1.4142135623730951}, "backend.routers.update_apis.router": {"tf": 1.4142135623730951}, "backend.test_create_api.client": {"tf": 1.4142135623730951}, "backend.test_delete.client": {"tf": 1.4142135623730951}, "backend.test_delete.TEST_DATA": {"tf": 3.605551275463989}, "backend.test_read.client": {"tf": 1.4142135623730951}, "backend.test_search.client": {"tf": 1.4142135623730951}, "backend.test_update.client": {"tf": 1.4142135623730951}, "backend.test_user_detail.client": {"tf": 1.4142135623730951}, "backend.test_user_detail.first_name": {"tf": 1.4142135623730951}, "backend.test_user_detail.last_name": {"tf": 1.4142135623730951}, "backend.test_user_detail.journal_title": {"tf": 1.4142135623730951}, "backend.test_user_detail.entry_text": {"tf": 1.4142135623730951}, "backend.test_user_detail.TEST_USER": {"tf": 2.6457513110645907}, "backend.test_user_detail.TEST_JOURNAL": {"tf": 2.449489742783178}, "backend.test_user_detail.TEST_ENTRY": {"tf": 2.23606797749979}, "backend.utils.pwd_context": {"tf": 1.4142135623730951}}, "df": 42, "x": {"2": {"7": {"docs": {"backend.auth.SECRET_KEY": {"tf": 1.4142135623730951}, "backend.auth.ALGORITHM": {"tf": 1.4142135623730951}, "backend.models.DATABASE_URL": {"tf": 1.4142135623730951}, "backend.models.SessionLocal": {"tf": 1.4142135623730951}, "backend.routers.ai_prof.BASEDIR": {"tf": 1.4142135623730951}, "backend.routers.ai_prof.model": {"tf": 1.4142135623730951}, "backend.routers.ai_prof.collection_name": {"tf": 1.4142135623730951}, "backend.routers.rag_search.faiss_index": {"tf": 1.4142135623730951}, "backend.routers.rag_search.MODEL_PATH": {"tf": 1.4142135623730951}, "backend.test_delete.TEST_DATA": {"tf": 4.47213595499958}, "backend.test_user_detail.first_name": {"tf": 1.4142135623730951}, "backend.test_user_detail.last_name": {"tf": 1.4142135623730951}, "backend.test_user_detail.journal_title": {"tf": 1.4142135623730951}, "backend.test_user_detail.entry_text": {"tf": 1.4142135623730951}, "backend.test_user_detail.TEST_USER": {"tf": 4.242640687119285}, "backend.test_user_detail.TEST_JOURNAL": {"tf": 3.7416573867739413}, "backend.test_user_detail.TEST_ENTRY": {"tf": 3.1622776601683795}}, "df": 17}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "h": {"docs": {}, "df": 0, "s": {"2": {"5": {"6": {"docs": {"backend.auth.ALGORITHM": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"2": {"1": {"0": {"docs": {"backend.routers.ai_prof.BASEDIR": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}}, "l": {"6": {"docs": {"backend.routers.rag_search.MODEL_PATH": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "t": {"docs": {"backend.main.app": {"tf": 1}, "backend.models.Base.registry": {"tf": 1}, "backend.populate_db_with_fake_entries.fake": {"tf": 1}, "backend.populate_db_with_fake_entries.session": {"tf": 1}, "backend.routers.ai_prof.router": {"tf": 1}, "backend.routers.ai_prof.client": {"tf": 1}, "backend.routers.create_apis.router": {"tf": 1}, "backend.routers.delete_apis.router": {"tf": 1}, "backend.routers.example.router": {"tf": 1}, "backend.routers.get_user.router": {"tf": 1}, "backend.routers.rag_search.router": {"tf": 1}, "backend.routers.rag_search.faiss_index": {"tf": 1.4142135623730951}, "backend.routers.read.router": {"tf": 1}, "backend.routers.read_apis.router": {"tf": 1}, "backend.routers.search.router": {"tf": 1}, "backend.routers.update_apis.router": {"tf": 1}, "backend.test_create_api.client": {"tf": 1}, "backend.test_delete.client": {"tf": 1}, "backend.test_read.client": {"tf": 1}, "backend.test_search.client": {"tf": 1}, "backend.test_update.client": {"tf": 1}, "backend.test_user_detail.client": {"tf": 1}, "backend.utils.pwd_context": {"tf": 1}}, "df": 23}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"2": {"1": {"0": {"docs": {"backend.routers.ai_prof.collection_name": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.test_user_detail.TEST_USER": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "a": {"2": {"4": {"docs": {"backend.routers.ai_prof.BASEDIR": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"backend.main.app": {"tf": 1.4142135623730951}, "backend.routers.ai_prof.router": {"tf": 1}, "backend.routers.create_apis.router": {"tf": 1}, "backend.routers.delete_apis.router": {"tf": 1}, "backend.routers.example.router": {"tf": 1}, "backend.routers.get_user.router": {"tf": 1}, "backend.routers.rag_search.router": {"tf": 1}, "backend.routers.read.router": {"tf": 1}, "backend.routers.read_apis.router": {"tf": 1}, "backend.routers.search.router": {"tf": 1}, "backend.routers.update_apis.router": {"tf": 1}}, "df": 11}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.SessionLocal": {"tf": 1.4142135623730951}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"backend.populate_db_with_fake_entries.fake": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.rag_search.faiss_index": {"tf": 1}}, "df": 1, ":": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"2": {"docs": {"backend.routers.rag_search.faiss_index": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.test_user_detail.TEST_USER": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {"backend.test_user_detail.entry_text": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"backend.main.app": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {"backend.models.Base.registry": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"backend.routers.ai_prof.router": {"tf": 1}, "backend.routers.create_apis.router": {"tf": 1}, "backend.routers.delete_apis.router": {"tf": 1}, "backend.routers.example.router": {"tf": 1}, "backend.routers.get_user.router": {"tf": 1}, "backend.routers.rag_search.router": {"tf": 1}, "backend.routers.read.router": {"tf": 1}, "backend.routers.read_apis.router": {"tf": 1}, "backend.routers.search.router": {"tf": 1}, "backend.routers.update_apis.router": {"tf": 1}}, "df": 10}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"backend.models.SessionLocal": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"backend.models.SessionLocal": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "x": {"2": {"docs": {"backend.routers.rag_search.faiss_index": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "t": {"docs": {"backend.test_user_detail.TEST_JOURNAL": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"backend.main.app": {"tf": 1}, "backend.models.Base.registry": {"tf": 1}, "backend.populate_db_with_fake_entries.fake": {"tf": 1}, "backend.populate_db_with_fake_entries.session": {"tf": 1}, "backend.routers.ai_prof.router": {"tf": 1}, "backend.routers.ai_prof.client": {"tf": 1}, "backend.routers.create_apis.router": {"tf": 1}, "backend.routers.delete_apis.router": {"tf": 1}, "backend.routers.example.router": {"tf": 1}, "backend.routers.get_user.router": {"tf": 1}, "backend.routers.rag_search.router": {"tf": 1}, "backend.routers.rag_search.faiss_index": {"tf": 1}, "backend.routers.read.router": {"tf": 1}, "backend.routers.read_apis.router": {"tf": 1}, "backend.routers.search.router": {"tf": 1}, "backend.routers.update_apis.router": {"tf": 1}, "backend.test_create_api.client": {"tf": 1}, "backend.test_delete.client": {"tf": 1}, "backend.test_read.client": {"tf": 1}, "backend.test_search.client": {"tf": 1}, "backend.test_update.client": {"tf": 1}, "backend.test_user_detail.client": {"tf": 1}}, "df": 22}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"backend.models.Base.registry": {"tf": 1}, "backend.populate_db_with_fake_entries.session": {"tf": 1}}, "df": 2}}, "n": {"docs": {"backend.models.SessionLocal": {"tf": 1}}, "df": 1}, "f": {"docs": {"backend.routers.rag_search.faiss_index": {"tf": 1.4142135623730951}}, "df": 1}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"backend.main.app": {"tf": 1}, "backend.models.Base.registry": {"tf": 1}, "backend.populate_db_with_fake_entries.fake": {"tf": 1}, "backend.populate_db_with_fake_entries.session": {"tf": 1}, "backend.routers.ai_prof.router": {"tf": 1}, "backend.routers.ai_prof.client": {"tf": 1}, "backend.routers.create_apis.router": {"tf": 1}, "backend.routers.delete_apis.router": {"tf": 1}, "backend.routers.example.router": {"tf": 1}, "backend.routers.get_user.router": {"tf": 1}, "backend.routers.rag_search.router": {"tf": 1}, "backend.routers.rag_search.faiss_index": {"tf": 1.4142135623730951}, "backend.routers.read.router": {"tf": 1}, "backend.routers.read_apis.router": {"tf": 1}, "backend.routers.search.router": {"tf": 1}, "backend.routers.update_apis.router": {"tf": 1}, "backend.test_create_api.client": {"tf": 1}, "backend.test_delete.client": {"tf": 1}, "backend.test_read.client": {"tf": 1}, "backend.test_search.client": {"tf": 1}, "backend.test_update.client": {"tf": 1}, "backend.test_user_detail.client": {"tf": 1}, "backend.utils.pwd_context": {"tf": 1}}, "df": 23}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"0": {"6": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"2": {"1": {"0": {"docs": {"backend.routers.ai_prof.BASEDIR": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.ai_prof.BASEDIR": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "docs": {}, "df": 0}, "docs": {"backend.test_delete.TEST_DATA": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"backend.models.Base.registry": {"tf": 1}, "backend.populate_db_with_fake_entries.session": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.DATABASE_URL": {"tf": 1}, "backend.models.engine": {"tf": 1}, "backend.models.SessionLocal": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"backend.models.SessionLocal": {"tf": 1}, "backend.populate_db_with_fake_entries.session": {"tf": 1.4142135623730951}}, "df": 2, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"backend.models.SessionLocal": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.rag_search.MODEL_PATH": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"backend.routers.rag_search.faiss_index": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.rag_search.faiss_index": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.test_create_api.client": {"tf": 1}, "backend.test_delete.client": {"tf": 1}, "backend.test_read.client": {"tf": 1}, "backend.test_search.client": {"tf": 1}, "backend.test_update.client": {"tf": 1}, "backend.test_user_detail.client": {"tf": 1}}, "df": 6}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"backend.test_delete.TEST_DATA": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {"backend.models.Base.registry": {"tf": 1}}, "df": 1}}}, "b": {"docs": {"backend.models.DATABASE_URL": {"tf": 1}, "backend.models.engine": {"tf": 1}, "backend.models.SessionLocal": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"backend.models.Base.registry": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"backend.routers.ai_prof.router": {"tf": 1}, "backend.routers.create_apis.router": {"tf": 1}, "backend.routers.delete_apis.router": {"tf": 1}, "backend.routers.example.router": {"tf": 1}, "backend.routers.get_user.router": {"tf": 1}, "backend.routers.rag_search.router": {"tf": 1}, "backend.routers.read.router": {"tf": 1}, "backend.routers.read_apis.router": {"tf": 1}, "backend.routers.search.router": {"tf": 1}, "backend.routers.update_apis.router": {"tf": 1}}, "df": 10}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"backend.models.Base.metadata": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {"backend.routers.rag_search.MODEL_PATH": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.models.DATABASE_URL": {"tf": 1}, "backend.models.engine": {"tf": 1}, "backend.models.SessionLocal": {"tf": 1}, "backend.test_user_detail.journal_title": {"tf": 1}, "backend.test_user_detail.entry_text": {"tf": 1}, "backend.test_user_detail.TEST_JOURNAL": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}}, "df": 7, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"backend.test_create_api.client": {"tf": 1.4142135623730951}, "backend.test_delete.client": {"tf": 1.4142135623730951}, "backend.test_read.client": {"tf": 1.4142135623730951}, "backend.test_search.client": {"tf": 1.4142135623730951}, "backend.test_update.client": {"tf": 1.4142135623730951}, "backend.test_user_detail.client": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"backend.test_user_detail.TEST_ENTRY": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.SessionLocal": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"backend.routers.rag_search.MODEL_PATH": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.rag_search.faiss_index": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"backend.test_user_detail.entry_text": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"backend.test_user_detail.TEST_JOURNAL": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.engine": {"tf": 1}, "backend.models.SessionLocal": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"backend.test_user_detail.entry_text": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1.7320508075688772}}, "df": 2}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.SessionLocal": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"backend.test_delete.TEST_DATA": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.SessionLocal": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.ai_prof.client": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"backend.test_delete.TEST_DATA": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"backend.models.SessionLocal": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.test_user_detail.TEST_JOURNAL": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"backend.utils.pwd_context": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"backend.models.SessionLocal": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {"backend.test_user_detail.first_name": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "y": {"docs": {"backend.populate_db_with_fake_entries.fake": {"tf": 1}, "backend.routers.rag_search.faiss_index": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"backend.test_delete.TEST_DATA": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"backend.test_delete.TEST_DATA": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1.4142135623730951}}, "df": 2}}}, "o": {"docs": {"backend.test_user_detail.last_name": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.ai_prof.model": {"tf": 1.7320508075688772}, "backend.routers.rag_search.embedding_model": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"backend.test_delete.TEST_DATA": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"backend.test_user_detail.TEST_ENTRY": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"backend.routers.ai_prof.model": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"2": {"docs": {"backend.routers.rag_search.faiss_index": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}, "d": {"docs": {"backend.test_delete.TEST_DATA": {"tf": 1.4142135623730951}, "backend.test_user_detail.TEST_USER": {"tf": 1}, "backend.test_user_detail.TEST_JOURNAL": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1.4142135623730951}}, "df": 4}, "s": {"docs": {"backend.test_user_detail.entry_text": {"tf": 1}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}}, "df": 2}}, "q": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.ai_prof.client": {"tf": 1.4142135623730951}}, "df": 1, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.ai_prof.client": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "v": {"2": {"docs": {"backend.routers.rag_search.MODEL_PATH": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"backend.test_delete.TEST_DATA": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1}}, "df": 2, "@": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"backend.test_delete.TEST_DATA": {"tf": 1}, "backend.test_user_detail.TEST_USER": {"tf": 1}}, "df": 2}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.test_user_detail.TEST_JOURNAL": {"tf": 1}}, "df": 1}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"backend.test_delete.TEST_DATA": {"tf": 1.4142135623730951}, "backend.test_user_detail.journal_title": {"tf": 1}, "backend.test_user_detail.TEST_JOURNAL": {"tf": 1.7320508075688772}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1}}, "df": 4}}}}}}}}}, "signature": {"root": {"1": {"0": {"docs": {"backend.populate_db_with_fake_entries.create_fake_users": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"0": {"docs": {"backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"6": {"0": {"0": {"docs": {"backend.auth.create_access_token": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_entries": {"tf": 1}}, "df": 2}, "docs": {"backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 1}, "backend.routers.ai_prof.search_lectures": {"tf": 1}}, "df": 2}, "docs": {"backend.auth.create_access_token": {"tf": 7}, "backend.auth.verify_token": {"tf": 3.7416573867739413}, "backend.main.get_db": {"tf": 2.6457513110645907}, "backend.main.health_check": {"tf": 2.6457513110645907}, "backend.main.signup": {"tf": 7.810249675906654}, "backend.main.login": {"tf": 7.810249675906654}, "backend.main.protected_route": {"tf": 5.196152422706632}, "backend.models.Base.__init__": {"tf": 3.7416573867739413}, "backend.models.User.__init__": {"tf": 3.1622776601683795}, "backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 3.7416573867739413}, "backend.populate_db_with_fake_entries.create_fake_users": {"tf": 3.7416573867739413}, "backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 3.7416573867739413}, "backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 3.7416573867739413}, "backend.populate_db_with_fake_entries.create_fake_entries": {"tf": 3.7416573867739413}, "backend.populate_db_with_fake_entries.populate_database": {"tf": 2.6457513110645907}, "backend.routers.ai_prof.search_lectures": {"tf": 4.242640687119285}, "backend.routers.ai_prof.get_embeddings": {"tf": 3.1622776601683795}, "backend.routers.ai_prof.gemini": {"tf": 3.1622776601683795}, "backend.routers.ai_prof.get_prof_response": {"tf": 3.7416573867739413}, "backend.routers.create_apis.get_db": {"tf": 2.6457513110645907}, "backend.routers.create_apis.create_journal": {"tf": 7.615773105863909}, "backend.routers.create_apis.create_group": {"tf": 8.54400374531753}, "backend.routers.create_apis.create_codes": {"tf": 8.717797887081348}, "backend.routers.create_apis.create_code": {"tf": 8.18535277187245}, "backend.routers.create_apis.create_entry": {"tf": 8.18535277187245}, "backend.routers.create_apis.create_tag": {"tf": 7.615773105863909}, "backend.routers.delete_apis.get_db": {"tf": 2.6457513110645907}, "backend.routers.delete_apis.delete_user": {"tf": 7}, "backend.routers.delete_apis.delete_from_group": {"tf": 7}, "backend.routers.delete_apis.delete_codes": {"tf": 8.18535277187245}, "backend.routers.delete_apis.delete_entry": {"tf": 8.18535277187245}, "backend.routers.delete_apis.delete_journal": {"tf": 7.615773105863909}, "backend.routers.delete_apis.delete_group": {"tf": 6.855654600401044}, "backend.routers.delete_apis.delete_tag": {"tf": 6.855654600401044}, "backend.routers.example.read_item": {"tf": 5.291502622129181}, "backend.routers.get_user.get_db": {"tf": 2.6457513110645907}, "backend.routers.get_user.get_user_details": {"tf": 7}, "backend.routers.get_user.get_user_journals": {"tf": 7}, "backend.routers.get_user.get_journal_codes": {"tf": 7.615773105863909}, "backend.routers.get_user.get_journal_entries": {"tf": 7.615773105863909}, "backend.routers.rag_search.check_model_downloaded": {"tf": 2.6457513110645907}, "backend.routers.rag_search.get_db": {"tf": 2.6457513110645907}, "backend.routers.rag_search.embed_and_index": {"tf": 7}, "backend.routers.rag_search.vector_search": {"tf": 7.615773105863909}, "backend.routers.read.get_db": {"tf": 2.6457513110645907}, "backend.routers.read.read_entries": {"tf": 8.18535277187245}, "backend.routers.read.read_codes": {"tf": 8.18535277187245}, "backend.routers.read.read_journal": {"tf": 7.615773105863909}, "backend.routers.read_apis.get_db": {"tf": 2.6457513110645907}, "backend.routers.read_apis.read_entries": {"tf": 7.615773105863909}, "backend.routers.read_apis.read_codes": {"tf": 7.615773105863909}, "backend.routers.read_apis.read_journal": {"tf": 7.615773105863909}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 7.615773105863909}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 7.615773105863909}, "backend.routers.read_apis.get_tag_name": {"tf": 7.615773105863909}, "backend.routers.read_apis.get_all_tags": {"tf": 7}, "backend.routers.read_apis.read_group": {"tf": 7.615773105863909}, "backend.routers.search.get_db": {"tf": 2.6457513110645907}, "backend.routers.search.search_entry": {"tf": 7.615773105863909}, "backend.routers.search.search_entry_in_journal": {"tf": 8.18535277187245}, "backend.routers.search.search_code": {"tf": 7.615773105863909}, "backend.routers.search.search_code_in_journal": {"tf": 8.18535277187245}, "backend.routers.search.search_journal_by_date": {"tf": 7.615773105863909}, "backend.routers.update_apis.get_db": {"tf": 2.6457513110645907}, "backend.routers.update_apis.update_user_first_name": {"tf": 7.615773105863909}, "backend.routers.update_apis.update_user_last_name": {"tf": 7.615773105863909}, "backend.routers.update_apis.update_entry": {"tf": 8.717797887081348}, "backend.routers.update_apis.update_user_code": {"tf": 9.219544457292887}, "backend.routers.update_apis.update_journal": {"tf": 8.18535277187245}, "backend.routers.update_apis.update_tag_name": {"tf": 8.18535277187245}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 8.18535277187245}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 8.18535277187245}, "backend.test_create_api.login_user": {"tf": 2.6457513110645907}, "backend.test_create_api.mock_db_session": {"tf": 2.6457513110645907}, "backend.test_create_api.mock_user": {"tf": 3.1622776601683795}, "backend.test_create_api.mock_create_journal": {"tf": 2.6457513110645907}, "backend.test_create_api.mock_create_group": {"tf": 2.6457513110645907}, "backend.test_create_api.mock_create_entry": {"tf": 2.6457513110645907}, "backend.test_create_api.mock_create_code": {"tf": 2.6457513110645907}, "backend.test_create_api.test_create_journal": {"tf": 3.7416573867739413}, "backend.test_create_api.test_create_group": {"tf": 3.7416573867739413}, "backend.test_create_api.test_create_entry": {"tf": 3.7416573867739413}, "backend.test_create_api.test_create_code": {"tf": 3.7416573867739413}, "backend.test_delete.login_user": {"tf": 2.6457513110645907}, "backend.test_delete.mock_db_session": {"tf": 2.6457513110645907}, "backend.test_delete.test_delete_entry_success": {"tf": 3.7416573867739413}, "backend.test_delete.test_delete_journal_success": {"tf": 3.7416573867739413}, "backend.test_delete.test_delete_group_success": {"tf": 3.1622776601683795}, "backend.test_delete.test_delete_user_success": {"tf": 3.7416573867739413}, "backend.test_read.login_user": {"tf": 2.6457513110645907}, "backend.test_read.mock_db_session": {"tf": 2.6457513110645907}, "backend.test_read.mock_user": {"tf": 3.1622776601683795}, "backend.test_read.test_read_entries_success": {"tf": 3.7416573867739413}, "backend.test_read.test_read_journal_success": {"tf": 3.7416573867739413}, "backend.test_read.test_read_journal_not_authorized": {"tf": 3.7416573867739413}, "backend.test_read.test_read_journal_no_entries": {"tf": 3.7416573867739413}, "backend.test_search.login_user": {"tf": 2.6457513110645907}, "backend.test_search.mock_db_session": {"tf": 2.6457513110645907}, "backend.test_search.mock_user_and_journals": {"tf": 3.1622776601683795}, "backend.test_search.test_search_entry": {"tf": 4.242640687119285}, "backend.test_search.test_search_entry_in_journal": {"tf": 4.242640687119285}, "backend.test_search.test_search_journal_by_date": {"tf": 4.242640687119285}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 3.1622776601683795}, "backend.test_update.login_user": {"tf": 2.6457513110645907}, "backend.test_update.mock_db_session": {"tf": 2.6457513110645907}, "backend.test_update.mock_user": {"tf": 3.1622776601683795}, "backend.test_update.test_update_user_first_name": {"tf": 4.242640687119285}, "backend.test_update.test_update_user_last_name": {"tf": 4.242640687119285}, "backend.test_update.test_update_user_entry": {"tf": 4.242640687119285}, "backend.test_update.test_update_journal": {"tf": 4.242640687119285}, "backend.test_user_detail.login_user": {"tf": 2.6457513110645907}, "backend.test_user_detail.mock_db_session": {"tf": 2.6457513110645907}, "backend.test_user_detail.mock_user": {"tf": 3.1622776601683795}, "backend.test_user_detail.mock_create_journal": {"tf": 2.6457513110645907}, "backend.test_user_detail.mock_journals": {"tf": 3.7416573867739413}, "backend.test_user_detail.mock_entries": {"tf": 3.7416573867739413}, "backend.test_user_detail.test_get_user_details_success": {"tf": 3.1622776601683795}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 4.242640687119285}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 3.7416573867739413}, "backend.utils.hash_password": {"tf": 4}, "backend.utils.verify_password": {"tf": 4.898979485566356}}, "df": 121, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"backend.auth.create_access_token": {"tf": 1}}, "df": 1}, "e": {"docs": {"backend.routers.search.search_journal_by_date": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"backend.auth.create_access_token": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"backend.auth.create_access_token": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"backend.auth.create_access_token": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"backend.main.signup": {"tf": 1}, "backend.main.login": {"tf": 1}, "backend.main.protected_route": {"tf": 1}, "backend.routers.create_apis.create_journal": {"tf": 1}, "backend.routers.create_apis.create_group": {"tf": 1}, "backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.create_apis.create_tag": {"tf": 1}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.get_user.get_user_details": {"tf": 1}, "backend.routers.get_user.get_user_journals": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 46}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {"backend.routers.create_apis.create_group": {"tf": 1}}, "df": 1}}}, "b": {"docs": {"backend.main.signup": {"tf": 1.7320508075688772}, "backend.main.login": {"tf": 1.7320508075688772}, "backend.routers.create_apis.create_journal": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_group": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_codes": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_code": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_entry": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_tag": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_user": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_from_group": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_codes": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_entry": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_journal": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_group": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_tag": {"tf": 1.4142135623730951}, "backend.routers.get_user.get_user_details": {"tf": 1.4142135623730951}, "backend.routers.get_user.get_user_journals": {"tf": 1.4142135623730951}, "backend.routers.get_user.get_journal_codes": {"tf": 1.4142135623730951}, "backend.routers.get_user.get_journal_entries": {"tf": 1.4142135623730951}, "backend.routers.rag_search.embed_and_index": {"tf": 1.4142135623730951}, "backend.routers.rag_search.vector_search": {"tf": 1.4142135623730951}, "backend.routers.read.read_entries": {"tf": 1.4142135623730951}, "backend.routers.read.read_codes": {"tf": 1.4142135623730951}, "backend.routers.read.read_journal": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_entries": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_codes": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_journal": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1.4142135623730951}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1.4142135623730951}, "backend.routers.read_apis.get_tag_name": {"tf": 1.4142135623730951}, "backend.routers.read_apis.get_all_tags": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_group": {"tf": 1.4142135623730951}, "backend.routers.search.search_entry": {"tf": 1.4142135623730951}, "backend.routers.search.search_entry_in_journal": {"tf": 1.4142135623730951}, "backend.routers.search.search_code": {"tf": 1.4142135623730951}, "backend.routers.search.search_code_in_journal": {"tf": 1.4142135623730951}, "backend.routers.search.search_journal_by_date": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_user_first_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_user_last_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_entry": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_user_code": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_journal": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_tag_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1.4142135623730951}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1.4142135623730951}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_update.test_update_journal": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}}, "df": 68}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"backend.auth.create_access_token": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"backend.main.protected_route": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"backend.auth.create_access_token": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.create_apis.create_journal": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"backend.auth.verify_token": {"tf": 1}, "backend.main.protected_route": {"tf": 1}, "backend.routers.create_apis.create_journal": {"tf": 1}, "backend.routers.create_apis.create_group": {"tf": 1}, "backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.create_apis.create_tag": {"tf": 1}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.get_user.get_user_details": {"tf": 1}, "backend.routers.get_user.get_user_journals": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 42}}}, "p": {"docs": {"backend.routers.ai_prof.search_lectures": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}}, "df": 7, "s": {"docs": {"backend.routers.ai_prof.get_embeddings": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"backend.routers.create_apis.create_tag": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 7}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"backend.auth.create_access_token": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"backend.main.signup": {"tf": 1.4142135623730951}, "backend.main.login": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_journal": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_group": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_codes": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_code": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_entry": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_tag": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_user": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_from_group": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_codes": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_entry": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_journal": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_group": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_tag": {"tf": 1.4142135623730951}, "backend.routers.get_user.get_user_details": {"tf": 1.4142135623730951}, "backend.routers.get_user.get_user_journals": {"tf": 1.4142135623730951}, "backend.routers.get_user.get_journal_codes": {"tf": 1.4142135623730951}, "backend.routers.get_user.get_journal_entries": {"tf": 1.4142135623730951}, "backend.routers.rag_search.embed_and_index": {"tf": 1.4142135623730951}, "backend.routers.rag_search.vector_search": {"tf": 1.4142135623730951}, "backend.routers.read.read_entries": {"tf": 1.4142135623730951}, "backend.routers.read.read_codes": {"tf": 1.4142135623730951}, "backend.routers.read.read_journal": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_entries": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_codes": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_journal": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1.4142135623730951}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1.4142135623730951}, "backend.routers.read_apis.get_tag_name": {"tf": 1.4142135623730951}, "backend.routers.read_apis.get_all_tags": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_group": {"tf": 1.4142135623730951}, "backend.routers.search.search_entry": {"tf": 1.4142135623730951}, "backend.routers.search.search_entry_in_journal": {"tf": 1.4142135623730951}, "backend.routers.search.search_code": {"tf": 1.4142135623730951}, "backend.routers.search.search_code_in_journal": {"tf": 1.4142135623730951}, "backend.routers.search.search_journal_by_date": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_user_first_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_user_last_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_entry": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_user_code": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_journal": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_tag_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1.4142135623730951}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1.4142135623730951}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_update.test_update_journal": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}}, "df": 68}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}}, "df": 5}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"backend.auth.verify_token": {"tf": 1}, "backend.main.protected_route": {"tf": 1}, "backend.routers.ai_prof.get_prof_response": {"tf": 1}, "backend.routers.create_apis.create_journal": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_group": {"tf": 1.7320508075688772}, "backend.routers.create_apis.create_codes": {"tf": 1.7320508075688772}, "backend.routers.create_apis.create_code": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_entry": {"tf": 1.4142135623730951}, "backend.routers.create_apis.create_tag": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.example.read_item": {"tf": 1}, "backend.routers.get_user.get_user_details": {"tf": 1}, "backend.routers.get_user.get_user_journals": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1.4142135623730951}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1.4142135623730951}, "backend.routers.search.search_entry_in_journal": {"tf": 1.4142135623730951}, "backend.routers.search.search_code": {"tf": 1.4142135623730951}, "backend.routers.search.search_code_in_journal": {"tf": 1.4142135623730951}, "backend.routers.search.search_journal_by_date": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_user_first_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_user_last_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_entry": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_user_code": {"tf": 1.7320508075688772}, "backend.routers.update_apis.update_journal": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_tag_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}, "backend.utils.hash_password": {"tf": 1.4142135623730951}, "backend.utils.verify_password": {"tf": 1.4142135623730951}}, "df": 46}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"backend.main.signup": {"tf": 1}, "backend.main.login": {"tf": 1}}, "df": 2}}}}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"backend.main.signup": {"tf": 1}, "backend.main.login": {"tf": 1}, "backend.routers.create_apis.create_journal": {"tf": 1}, "backend.routers.create_apis.create_group": {"tf": 1}, "backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.create_apis.create_tag": {"tf": 1}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.get_user.get_user_details": {"tf": 1}, "backend.routers.get_user.get_user_journals": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 45}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"backend.main.signup": {"tf": 1}, "backend.main.login": {"tf": 1}, "backend.main.protected_route": {"tf": 1}, "backend.routers.ai_prof.get_prof_response": {"tf": 1}, "backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1.4142135623730951}, "backend.test_search.test_search_entry_in_journal": {"tf": 1.4142135623730951}, "backend.test_search.test_search_journal_by_date": {"tf": 1.4142135623730951}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1.4142135623730951}, "backend.test_update.test_update_user_last_name": {"tf": 1.4142135623730951}, "backend.test_update.test_update_user_entry": {"tf": 1.4142135623730951}, "backend.test_update.test_update_journal": {"tf": 1.4142135623730951}, "backend.test_user_detail.mock_journals": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 28, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.main.signup": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"backend.main.signup": {"tf": 1}, "backend.main.login": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"backend.utils.verify_password": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"backend.main.signup": {"tf": 1}, "backend.main.login": {"tf": 1}, "backend.routers.create_apis.create_journal": {"tf": 1}, "backend.routers.create_apis.create_group": {"tf": 1}, "backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.create_apis.create_tag": {"tf": 1}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.get_user.get_user_details": {"tf": 1}, "backend.routers.get_user.get_user_journals": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 45}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"backend.main.signup": {"tf": 1}, "backend.main.login": {"tf": 1}, "backend.routers.create_apis.create_journal": {"tf": 1}, "backend.routers.create_apis.create_group": {"tf": 1}, "backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.create_apis.create_tag": {"tf": 1}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.get_user.get_user_details": {"tf": 1}, "backend.routers.get_user.get_user_journals": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 45}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"backend.routers.create_apis.create_group": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_update.test_update_journal": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 22, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.main.login": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.update_apis.update_user_last_name": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"backend.main.protected_route": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {"backend.routers.ai_prof.search_lectures": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"backend.models.Base.__init__": {"tf": 1}}, "df": 1}, "d": {"docs": {"backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"backend.routers.create_apis.create_journal": {"tf": 1}, "backend.routers.create_apis.create_group": {"tf": 1}, "backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.create_apis.create_tag": {"tf": 1}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.get_user.get_user_details": {"tf": 1}, "backend.routers.get_user.get_user_journals": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 40}}}}, "n": {"docs": {"backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_users": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 1}, "backend.populate_db_with_fake_entries.create_fake_entries": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.create_apis.create_group": {"tf": 1}, "backend.routers.create_apis.create_tag": {"tf": 1}, "backend.routers.update_apis.update_user_first_name": {"tf": 1}, "backend.routers.update_apis.update_user_last_name": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.create_apis.create_group": {"tf": 1}, "backend.routers.example.read_item": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}}, "df": 4, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"backend.routers.update_apis.update_tag_name": {"tf": 1}}, "df": 1}}}, "q": {"docs": {"backend.routers.example.read_item": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"backend.routers.ai_prof.search_lectures": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.ai_prof.gemini": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}}, "df": 6}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"backend.utils.hash_password": {"tf": 1}, "backend.utils.verify_password": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"backend.utils.verify_password": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.ai_prof.get_prof_response": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"backend.test_create_api.mock_user": {"tf": 1}, "backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1.4142135623730951}, "backend.test_search.test_search_entry_in_journal": {"tf": 1.4142135623730951}, "backend.test_search.test_search_journal_by_date": {"tf": 1.4142135623730951}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1.4142135623730951}, "backend.test_update.test_update_user_last_name": {"tf": 1.4142135623730951}, "backend.test_update.test_update_user_entry": {"tf": 1.4142135623730951}, "backend.test_update.test_update_journal": {"tf": 1.4142135623730951}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1.4142135623730951}, "backend.test_user_detail.mock_entries": {"tf": 1.4142135623730951}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1.4142135623730951}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 28}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"backend.routers.create_apis.create_journal": {"tf": 1}, "backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1.4142135623730951}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}, "backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}}, "df": 24, "s": {"docs": {"backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 4}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.example.read_item": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.routers.update_apis.update_journal": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1.4142135623730951}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1.4142135623730951}}, "df": 30}, "n": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.create_apis.create_entry": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_entry": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.example.read_item": {"tf": 1}, "backend.routers.get_user.get_journal_codes": {"tf": 1}, "backend.routers.get_user.get_journal_entries": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1.4142135623730951}, "backend.routers.read.read_codes": {"tf": 1.4142135623730951}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.update_apis.update_entry": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_user_code": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_journal": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1.4142135623730951}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1.4142135623730951}}, "df": 30}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"backend.routers.example.read_item": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.create_apis.create_codes": {"tf": 1}, "backend.routers.create_apis.create_code": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.update_apis.update_user_code": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}}, "df": 7}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}}, "df": 5}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.update_apis.update_user_first_name": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.utils.verify_password": {"tf": 1}}, "df": 1}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"backend.models.Base": {"tf": 1.4142135623730951}, "backend.models.User": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"backend.models.Base": {"tf": 1.4142135623730951}, "backend.models.User": {"tf": 1.4142135623730951}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "doc": {"root": {"docs": {"backend": {"tf": 1.7320508075688772}, "backend.auth": {"tf": 1.7320508075688772}, "backend.auth.SECRET_KEY": {"tf": 1.7320508075688772}, "backend.auth.ALGORITHM": {"tf": 1.7320508075688772}, "backend.auth.ACCESS_TOKEN_EXPIRE_MINUTES": {"tf": 1.7320508075688772}, "backend.auth.create_access_token": {"tf": 1.7320508075688772}, "backend.auth.verify_token": {"tf": 1.7320508075688772}, "backend.main": {"tf": 1.7320508075688772}, "backend.main.app": {"tf": 1.7320508075688772}, "backend.main.get_db": {"tf": 1.7320508075688772}, "backend.main.health_check": {"tf": 1.7320508075688772}, "backend.main.signup": {"tf": 1.7320508075688772}, "backend.main.login": {"tf": 1.7320508075688772}, "backend.main.protected_route": {"tf": 1.7320508075688772}, "backend.models": {"tf": 1.7320508075688772}, "backend.models.Base": {"tf": 2.449489742783178}, "backend.models.Base.__init__": {"tf": 3.3166247903554}, "backend.models.Base.registry": {"tf": 1.7320508075688772}, "backend.models.Base.metadata": {"tf": 1.7320508075688772}, "backend.models.User": {"tf": 2.449489742783178}, "backend.models.User.__init__": {"tf": 3.3166247903554}, "backend.models.User.id": {"tf": 1.7320508075688772}, "backend.models.User.username": {"tf": 1.7320508075688772}, "backend.models.User.hashed_password": {"tf": 1.7320508075688772}, "backend.models.DATABASE_URL": {"tf": 1.7320508075688772}, "backend.models.engine": {"tf": 1.7320508075688772}, "backend.models.SessionLocal": {"tf": 1.7320508075688772}, "backend.populate_db_with_fake_entries": {"tf": 1.7320508075688772}, "backend.populate_db_with_fake_entries.fake": {"tf": 1.7320508075688772}, "backend.populate_db_with_fake_entries.session": {"tf": 1.7320508075688772}, "backend.populate_db_with_fake_entries.create_fake_groups": {"tf": 1.7320508075688772}, "backend.populate_db_with_fake_entries.create_fake_users": {"tf": 1.7320508075688772}, "backend.populate_db_with_fake_entries.create_fake_journals": {"tf": 1.7320508075688772}, "backend.populate_db_with_fake_entries.create_fake_codes": {"tf": 1.7320508075688772}, "backend.populate_db_with_fake_entries.create_fake_entries": {"tf": 1.7320508075688772}, "backend.populate_db_with_fake_entries.populate_database": {"tf": 1.7320508075688772}, "backend.routers": {"tf": 1.7320508075688772}, "backend.routers.ai_prof": {"tf": 1.7320508075688772}, "backend.routers.ai_prof.BASEDIR": {"tf": 1.7320508075688772}, "backend.routers.ai_prof.model": {"tf": 1.7320508075688772}, "backend.routers.ai_prof.router": {"tf": 1.7320508075688772}, "backend.routers.ai_prof.client": {"tf": 1.7320508075688772}, "backend.routers.ai_prof.collection_name": {"tf": 1.7320508075688772}, "backend.routers.ai_prof.search_lectures": {"tf": 1.7320508075688772}, "backend.routers.ai_prof.get_embeddings": {"tf": 1.7320508075688772}, "backend.routers.ai_prof.gemini": {"tf": 1.7320508075688772}, "backend.routers.ai_prof.get_prof_response": {"tf": 1.4142135623730951}, "backend.routers.create_apis": {"tf": 1.7320508075688772}, "backend.routers.create_apis.router": {"tf": 1.7320508075688772}, "backend.routers.create_apis.get_db": {"tf": 1.7320508075688772}, "backend.routers.create_apis.create_journal": {"tf": 1.7320508075688772}, "backend.routers.create_apis.create_group": {"tf": 1.7320508075688772}, "backend.routers.create_apis.create_codes": {"tf": 1.7320508075688772}, "backend.routers.create_apis.create_code": {"tf": 1.7320508075688772}, "backend.routers.create_apis.create_entry": {"tf": 1.7320508075688772}, "backend.routers.create_apis.create_tag": {"tf": 1.7320508075688772}, "backend.routers.delete_apis": {"tf": 1.7320508075688772}, "backend.routers.delete_apis.router": {"tf": 1.7320508075688772}, "backend.routers.delete_apis.get_db": {"tf": 1.7320508075688772}, "backend.routers.delete_apis.delete_user": {"tf": 1.7320508075688772}, "backend.routers.delete_apis.delete_from_group": {"tf": 1.7320508075688772}, "backend.routers.delete_apis.delete_codes": {"tf": 1.7320508075688772}, "backend.routers.delete_apis.delete_entry": {"tf": 1.7320508075688772}, "backend.routers.delete_apis.delete_journal": {"tf": 1.7320508075688772}, "backend.routers.delete_apis.delete_group": {"tf": 1.7320508075688772}, "backend.routers.delete_apis.delete_tag": {"tf": 1.7320508075688772}, "backend.routers.example": {"tf": 1.7320508075688772}, "backend.routers.example.router": {"tf": 1.7320508075688772}, "backend.routers.example.read_item": {"tf": 1.7320508075688772}, "backend.routers.get_user": {"tf": 1.7320508075688772}, "backend.routers.get_user.router": {"tf": 1.7320508075688772}, "backend.routers.get_user.get_db": {"tf": 1.7320508075688772}, "backend.routers.get_user.get_user_details": {"tf": 1.7320508075688772}, "backend.routers.get_user.get_user_journals": {"tf": 1.7320508075688772}, "backend.routers.get_user.get_journal_codes": {"tf": 1.7320508075688772}, "backend.routers.get_user.get_journal_entries": {"tf": 1.7320508075688772}, "backend.routers.rag_search": {"tf": 1.7320508075688772}, "backend.routers.rag_search.router": {"tf": 1.7320508075688772}, "backend.routers.rag_search.embedding_model": {"tf": 1.7320508075688772}, "backend.routers.rag_search.faiss_index": {"tf": 1.7320508075688772}, "backend.routers.rag_search.entry_metadata": {"tf": 1.7320508075688772}, "backend.routers.rag_search.MODEL_PATH": {"tf": 1.7320508075688772}, "backend.routers.rag_search.check_model_downloaded": {"tf": 1.7320508075688772}, "backend.routers.rag_search.get_db": {"tf": 1.7320508075688772}, "backend.routers.rag_search.embed_and_index": {"tf": 1.7320508075688772}, "backend.routers.rag_search.vector_search": {"tf": 1.7320508075688772}, "backend.routers.read": {"tf": 1.7320508075688772}, "backend.routers.read.router": {"tf": 1.7320508075688772}, "backend.routers.read.get_db": {"tf": 1.7320508075688772}, "backend.routers.read.read_entries": {"tf": 1.7320508075688772}, "backend.routers.read.read_codes": {"tf": 1.7320508075688772}, "backend.routers.read.read_journal": {"tf": 1.7320508075688772}, "backend.routers.read_apis": {"tf": 1.7320508075688772}, "backend.routers.read_apis.router": {"tf": 1.7320508075688772}, "backend.routers.read_apis.get_db": {"tf": 1.7320508075688772}, "backend.routers.read_apis.read_entries": {"tf": 1.7320508075688772}, "backend.routers.read_apis.read_codes": {"tf": 1.7320508075688772}, "backend.routers.read_apis.read_journal": {"tf": 1.7320508075688772}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1.7320508075688772}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1.4142135623730951}, "backend.routers.read_apis.get_tag_name": {"tf": 1.4142135623730951}, "backend.routers.read_apis.get_all_tags": {"tf": 1.7320508075688772}, "backend.routers.read_apis.read_group": {"tf": 1.7320508075688772}, "backend.routers.search": {"tf": 1.7320508075688772}, "backend.routers.search.router": {"tf": 1.7320508075688772}, "backend.routers.search.get_db": {"tf": 1.7320508075688772}, "backend.routers.search.search_entry": {"tf": 1.7320508075688772}, "backend.routers.search.search_entry_in_journal": {"tf": 1.7320508075688772}, "backend.routers.search.search_code": {"tf": 1.7320508075688772}, "backend.routers.search.search_code_in_journal": {"tf": 1.7320508075688772}, "backend.routers.search.search_journal_by_date": {"tf": 1.7320508075688772}, "backend.routers.update_apis": {"tf": 1.7320508075688772}, "backend.routers.update_apis.router": {"tf": 1.7320508075688772}, "backend.routers.update_apis.get_db": {"tf": 1.7320508075688772}, "backend.routers.update_apis.update_user_first_name": {"tf": 1.7320508075688772}, "backend.routers.update_apis.update_user_last_name": {"tf": 1.7320508075688772}, "backend.routers.update_apis.update_entry": {"tf": 1.7320508075688772}, "backend.routers.update_apis.update_user_code": {"tf": 1.7320508075688772}, "backend.routers.update_apis.update_journal": {"tf": 1.7320508075688772}, "backend.routers.update_apis.update_tag_name": {"tf": 1.7320508075688772}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1.7320508075688772}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1.7320508075688772}, "backend.test_create_api": {"tf": 1.7320508075688772}, "backend.test_create_api.client": {"tf": 1.7320508075688772}, "backend.test_create_api.login_user": {"tf": 1.7320508075688772}, "backend.test_create_api.mock_db_session": {"tf": 1.7320508075688772}, "backend.test_create_api.mock_user": {"tf": 1.7320508075688772}, "backend.test_create_api.mock_create_journal": {"tf": 1.7320508075688772}, "backend.test_create_api.mock_create_group": {"tf": 1.7320508075688772}, "backend.test_create_api.mock_create_entry": {"tf": 1.7320508075688772}, "backend.test_create_api.mock_create_code": {"tf": 1.7320508075688772}, "backend.test_create_api.test_create_journal": {"tf": 1.7320508075688772}, "backend.test_create_api.test_create_group": {"tf": 1.7320508075688772}, "backend.test_create_api.test_create_entry": {"tf": 1.7320508075688772}, "backend.test_create_api.test_create_code": {"tf": 1.7320508075688772}, "backend.test_delete": {"tf": 1.7320508075688772}, "backend.test_delete.client": {"tf": 1.7320508075688772}, "backend.test_delete.TEST_DATA": {"tf": 1.7320508075688772}, "backend.test_delete.login_user": {"tf": 1.7320508075688772}, "backend.test_delete.mock_db_session": {"tf": 1.7320508075688772}, "backend.test_delete.test_delete_entry_success": {"tf": 1.7320508075688772}, "backend.test_delete.test_delete_journal_success": {"tf": 1.7320508075688772}, "backend.test_delete.test_delete_group_success": {"tf": 1.7320508075688772}, "backend.test_delete.test_delete_user_success": {"tf": 1.7320508075688772}, "backend.test_read": {"tf": 1.7320508075688772}, "backend.test_read.client": {"tf": 1.7320508075688772}, "backend.test_read.login_user": {"tf": 1.7320508075688772}, "backend.test_read.mock_db_session": {"tf": 1.7320508075688772}, "backend.test_read.mock_user": {"tf": 1.7320508075688772}, "backend.test_read.test_read_entries_success": {"tf": 1.7320508075688772}, "backend.test_read.test_read_journal_success": {"tf": 1.7320508075688772}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1.7320508075688772}, "backend.test_read.test_read_journal_no_entries": {"tf": 1.7320508075688772}, "backend.test_search": {"tf": 1.7320508075688772}, "backend.test_search.client": {"tf": 1.7320508075688772}, "backend.test_search.login_user": {"tf": 1.7320508075688772}, "backend.test_search.mock_db_session": {"tf": 1.7320508075688772}, "backend.test_search.mock_user_and_journals": {"tf": 1.7320508075688772}, "backend.test_search.test_search_entry": {"tf": 1.7320508075688772}, "backend.test_search.test_search_entry_in_journal": {"tf": 1.7320508075688772}, "backend.test_search.test_search_journal_by_date": {"tf": 1.7320508075688772}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1.7320508075688772}, "backend.test_update": {"tf": 1.7320508075688772}, "backend.test_update.client": {"tf": 1.7320508075688772}, "backend.test_update.login_user": {"tf": 1.7320508075688772}, "backend.test_update.mock_db_session": {"tf": 1.7320508075688772}, "backend.test_update.mock_user": {"tf": 1.7320508075688772}, "backend.test_update.test_update_user_first_name": {"tf": 1.7320508075688772}, "backend.test_update.test_update_user_last_name": {"tf": 1.7320508075688772}, "backend.test_update.test_update_user_entry": {"tf": 1.7320508075688772}, "backend.test_update.test_update_journal": {"tf": 1.7320508075688772}, "backend.test_user_detail": {"tf": 1.7320508075688772}, "backend.test_user_detail.client": {"tf": 1.7320508075688772}, "backend.test_user_detail.user_id": {"tf": 1.7320508075688772}, "backend.test_user_detail.journal_id": {"tf": 1.7320508075688772}, "backend.test_user_detail.entry_id": {"tf": 1.7320508075688772}, "backend.test_user_detail.first_name": {"tf": 1.7320508075688772}, "backend.test_user_detail.last_name": {"tf": 1.7320508075688772}, "backend.test_user_detail.journal_title": {"tf": 1.7320508075688772}, "backend.test_user_detail.entry_text": {"tf": 1.7320508075688772}, "backend.test_user_detail.TEST_USER": {"tf": 1.7320508075688772}, "backend.test_user_detail.TEST_JOURNAL": {"tf": 1.7320508075688772}, "backend.test_user_detail.TEST_ENTRY": {"tf": 1.7320508075688772}, "backend.test_user_detail.login_user": {"tf": 1.7320508075688772}, "backend.test_user_detail.mock_db_session": {"tf": 1.7320508075688772}, "backend.test_user_detail.mock_user": {"tf": 1.7320508075688772}, "backend.test_user_detail.mock_create_journal": {"tf": 1.7320508075688772}, "backend.test_user_detail.mock_journals": {"tf": 1.7320508075688772}, "backend.test_user_detail.mock_entries": {"tf": 1.7320508075688772}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1.7320508075688772}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1.7320508075688772}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1.7320508075688772}, "backend.utils": {"tf": 1.7320508075688772}, "backend.utils.pwd_context": {"tf": 1.7320508075688772}, "backend.utils.hash_password": {"tf": 1.7320508075688772}, "backend.utils.verify_password": {"tf": 1.7320508075688772}}, "df": 196, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.Base": {"tf": 1.4142135623730951}, "backend.models.Base.__init__": {"tf": 1.7320508075688772}, "backend.models.User": {"tf": 1.4142135623730951}, "backend.models.User.__init__": {"tf": 1.7320508075688772}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.rag_search.check_model_downloaded": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1.7320508075688772}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1.4142135623730951}, "backend.test_create_api.login_user": {"tf": 1}, "backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1.4142135623730951}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_update.test_update_journal": {"tf": 1}, "backend.test_user_detail.login_user": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}}, "df": 62, "s": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}, "m": {"docs": {"backend.routers.rag_search.embed_and_index": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "r": {"docs": {"backend.test_search.mock_user_and_journals": {"tf": 1}}, "df": 1}}, "n": {"docs": {"backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.Base.__init__": {"tf": 1.4142135623730951}, "backend.models.User": {"tf": 1}, "backend.models.User.__init__": {"tf": 1.4142135623730951}}, "df": 4}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.read_apis.read_journal_by_tags": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.test_create_api.login_user": {"tf": 1}, "backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_user_detail.login_user": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}}, "df": 27, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"backend.test_create_api.login_user": {"tf": 1}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_user_detail.login_user": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.update_tag_name": {"tf": 1.4142135623730951}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 6, "s": {"docs": {"backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 4}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}}, "df": 9}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_update.test_update_journal": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 23}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"backend.routers.ai_prof.get_prof_response": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.Base.__init__": {"tf": 1}, "backend.models.User": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "n": {"docs": {"backend.routers.rag_search.check_model_downloaded": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"backend.routers.example.read_item": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}}, "df": 19}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base": {"tf": 1.4142135623730951}, "backend.models.Base.__init__": {"tf": 1}, "backend.models.User": {"tf": 1.4142135623730951}, "backend.models.User.__init__": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"backend.models.Base.__init__": {"tf": null}, "backend.models.User.__init__": {"tf": null}}, "df": 2}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.delete_apis.delete_codes": {"tf": 1.4142135623730951}, "backend.routers.read.read_codes": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_codes": {"tf": 1.4142135623730951}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}}, "df": 5, "s": {"docs": {"backend.routers.search.search_code": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"backend.routers.rag_search.check_model_downloaded": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}}, "df": 5, "d": {"docs": {"backend.routers.search.search_journal_by_date": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 7}}}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.Base.__init__": {"tf": 1}, "backend.models.User": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}}, "df": 14}, "n": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}}, "df": 5}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}, "backend.routers.rag_search.check_model_downloaded": {"tf": 1}}, "df": 3}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.delete_apis.delete_group": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 6, "s": {"docs": {"backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.example.read_item": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "m": {"docs": {"backend.routers.example.read_item": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}}, "df": 14, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.Base": {"tf": 1.4142135623730951}, "backend.models.Base.__init__": {"tf": 1.4142135623730951}, "backend.models.User": {"tf": 1.4142135623730951}, "backend.models.User.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.delete_apis.delete_group": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"backend.routers.rag_search.embed_and_index": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"backend.routers.example.read_item": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1.4142135623730951}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}}, "df": 12, "s": {"docs": {"backend.routers.read_apis.read_journal_by_tags": {"tf": 1}}, "df": 1}}, "f": {"docs": {"backend.routers.rag_search.check_model_downloaded": {"tf": 1}}, "df": 1}, "s": {"docs": {"backend.test_read.test_read_journal_not_authorized": {"tf": 1}}, "df": 1}}, "a": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.Base.__init__": {"tf": 1}, "backend.models.User": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1.4142135623730951}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1.4142135623730951}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1.4142135623730951}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1.7320508075688772}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1.4142135623730951}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}}, "df": 39, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.rag_search.vector_search": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {"backend.models.Base.__init__": {"tf": 1.4142135623730951}, "backend.models.User.__init__": {"tf": 1.4142135623730951}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}}, "df": 3}}, "n": {"docs": {"backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.example.read_item": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}, "backend.test_create_api.test_create_code": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 5, "d": {"docs": {"backend.models.Base": {"tf": 1.4142135623730951}, "backend.models.Base.__init__": {"tf": 1}, "backend.models.User": {"tf": 1.4142135623730951}, "backend.models.User.__init__": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}, "backend.test_create_api.login_user": {"tf": 1}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_user_detail.login_user": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 21}, "y": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.Base.__init__": {"tf": 1}, "backend.models.User": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 4}}, "t": {"docs": {"backend.routers.delete_apis.delete_from_group": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.Base.__init__": {"tf": 1.4142135623730951}, "backend.models.User": {"tf": 1}, "backend.models.User.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1.4142135623730951}, "backend.routers.search.search_code": {"tf": 1.4142135623730951}}, "df": 12, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.read_apis.read_group": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {"backend.routers.ai_prof.get_prof_response": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.update_apis.add_tag_to_journal": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"backend.test_create_api.login_user": {"tf": 1}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_user_detail.login_user": {"tf": 1}}, "df": 6, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.test_read.test_read_journal_not_authorized": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"backend.models.Base": {"tf": 1.4142135623730951}, "backend.models.User": {"tf": 1.4142135623730951}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}}, "df": 4, "t": {"docs": {"backend.test_read.test_read_journal_not_authorized": {"tf": 1}}, "df": 1, "e": {"docs": {"backend.routers.read_apis.read_journal_by_tags": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}}, "df": 4, "s": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.example.read_item": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_group": {"tf": 1}}, "df": 9, "s": {"docs": {"backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.read_apis.get_tag_name": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}}, "df": 4}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"backend.test_user_detail.test_create_and_read_journal": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"backend.test_create_api.login_user": {"tf": 1}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_user_detail.login_user": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}, "backend.routers.ai_prof.get_prof_response": {"tf": 1}, "backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 9}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1.4142135623730951}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}}, "df": 17, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"backend.test_read.test_read_journal_no_entries": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.delete_apis.delete_from_group": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"backend.test_create_api.login_user": {"tf": 1}, "backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_user_detail.login_user": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}}, "df": 24}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.test_update.test_update_user_first_name": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}}, "df": 5}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"backend.models.Base": {"tf": 1}, "backend.models.User": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.ai_prof.get_prof_response": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1.4142135623730951}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.test_create_group": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"backend.routers.rag_search.check_model_downloaded": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}}, "df": 11}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}}, "df": 6}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.delete_apis.delete_codes": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}}, "df": 11}}}}}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base.__init__": {"tf": 1.4142135623730951}, "backend.models.User.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"backend.routers.read_apis.read_journal_by_tags": {"tf": 1}}, "df": 1, "r": {"docs": {"backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}}, "df": 20}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_update.test_update_journal": {"tf": 1}}, "df": 4, "s": {"docs": {"backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.update_apis.update_tag_name": {"tf": 1}}, "df": 2}, "d": {"docs": {"backend.routers.delete_apis.delete_from_group": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"backend.routers.read_apis.read_group": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"backend.routers.ai_prof.get_prof_response": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"backend.routers.ai_prof.get_prof_response": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"backend.routers.rag_search.vector_search": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_entries": {"tf": 1.4142135623730951}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.test_create_entry": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_user_detail.test_create_and_read_entry": {"tf": 1}}, "df": 12}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.rag_search.embed_and_index": {"tf": 1}, "backend.routers.rag_search.vector_search": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 1.4142135623730951}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}}, "df": 13}}}}}, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.read_apis.read_journal_by_tags": {"tf": 1}, "backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}, "backend.test_read.test_read_entries_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_search.test_search_entry": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}, "backend.test_update.test_update_user_first_name": {"tf": 1}, "backend.test_update.test_update_user_last_name": {"tf": 1}, "backend.test_update.test_update_user_entry": {"tf": 1}, "backend.test_update.test_update_journal": {"tf": 1}, "backend.test_user_detail.test_get_user_details_success": {"tf": 1}}, "df": 18}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.rag_search.embed_and_index": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"backend.routers.read_apis.read_journal_by_tags": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.models.Base.__init__": {"tf": 1}, "backend.models.User.__init__": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.ai_prof.get_prof_response": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.read_apis.read_journal_by_tags": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"backend.routers.rag_search.check_model_downloaded": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.mock_create_group": {"tf": 1}, "backend.test_create_api.mock_create_entry": {"tf": 1}, "backend.test_create_api.mock_create_code": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}}, "df": 18}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"backend.test_delete.test_delete_entry_success": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_delete.test_delete_group_success": {"tf": 1}, "backend.test_delete.test_delete_user_success": {"tf": 1}}, "df": 4, "s": {"docs": {"backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"backend.test_user_detail.test_get_user_details_success": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"backend.routers.delete_apis.delete_user": {"tf": 1}, "backend.routers.read_apis.get_all_tags": {"tf": 1}, "backend.test_create_api.mock_db_session": {"tf": 1}, "backend.test_create_api.mock_user": {"tf": 1}, "backend.test_delete.mock_db_session": {"tf": 1}, "backend.test_read.mock_db_session": {"tf": 1}, "backend.test_read.mock_user": {"tf": 1}, "backend.test_search.mock_db_session": {"tf": 1}, "backend.test_update.mock_db_session": {"tf": 1}, "backend.test_update.mock_user": {"tf": 1}, "backend.test_user_detail.mock_db_session": {"tf": 1}, "backend.test_user_detail.mock_user": {"tf": 1}}, "df": 12}}}}}, "e": {"docs": {"backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1.4142135623730951}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"backend.routers.rag_search.check_model_downloaded": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"backend.routers.read_apis.get_all_tags": {"tf": 1}}, "df": 1}}}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"backend.routers.delete_apis.delete_from_group": {"tf": 1}, "backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}, "backend.routers.delete_apis.delete_journal": {"tf": 1}, "backend.routers.read.read_entries": {"tf": 1}, "backend.routers.read.read_codes": {"tf": 1}, "backend.routers.read.read_journal": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_entries": {"tf": 1}, "backend.routers.read_apis.read_codes": {"tf": 1}, "backend.routers.read_apis.read_journal": {"tf": 1.4142135623730951}, "backend.routers.read_apis.read_journal_by_tags": {"tf": 2}, "backend.routers.read_apis.get_tags_by_journal": {"tf": 1.4142135623730951}, "backend.routers.search.search_entry_in_journal": {"tf": 1}, "backend.routers.search.search_code_in_journal": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}, "backend.test_create_api.mock_create_journal": {"tf": 1}, "backend.test_create_api.test_create_journal": {"tf": 1}, "backend.test_delete.test_delete_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_success": {"tf": 1}, "backend.test_read.test_read_journal_not_authorized": {"tf": 1}, "backend.test_read.test_read_journal_no_entries": {"tf": 1}, "backend.test_search.test_search_entry_in_journal": {"tf": 1}, "backend.test_search.test_search_journal_by_date": {"tf": 1}, "backend.test_search.test_search_journal_by_date_invalid_format": {"tf": 1}, "backend.test_update.test_update_journal": {"tf": 1}, "backend.test_user_detail.mock_create_journal": {"tf": 1}, "backend.test_user_detail.mock_entries": {"tf": 1}, "backend.test_user_detail.test_create_and_read_journal": {"tf": 1}}, "df": 29, "s": {"docs": {"backend.routers.delete_apis.delete_group": {"tf": 1}, "backend.routers.delete_apis.delete_tag": {"tf": 1}, "backend.routers.read_apis.read_group": {"tf": 1}, "backend.routers.search.search_entry": {"tf": 1}, "backend.routers.search.search_code": {"tf": 1}, "backend.routers.search.search_journal_by_date": {"tf": 1}, "backend.routers.update_apis.add_tag_to_journal": {"tf": 1}, "backend.routers.update_apis.delete_tag_from_journal": {"tf": 1}, "backend.test_search.mock_user_and_journals": {"tf": 1}, "backend.test_user_detail.mock_journals": {"tf": 1}}, "df": 10}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.read_apis.read_journal_by_tags": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"backend.routers.delete_apis.delete_codes": {"tf": 1}, "backend.routers.delete_apis.delete_entry": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"backend.test_create_api.login_user": {"tf": 1}, "backend.test_delete.login_user": {"tf": 1}, "backend.test_read.login_user": {"tf": 1}, "backend.test_search.login_user": {"tf": 1}, "backend.test_update.login_user": {"tf": 1}, "backend.test_user_detail.login_user": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"backend.test_update.test_update_user_last_name": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"backend.routers.rag_search.vector_search": {"tf": 1}}, "df": 1}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();